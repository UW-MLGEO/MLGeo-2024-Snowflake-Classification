2024-11-11 08:44:36,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 08:44:36,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 08:44:36,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 08:44:36,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 09:08:52,804:INFO:PyCaret ClassificationExperiment
2024-11-11 09:08:52,804:INFO:Logging name: clf-default-name
2024-11-11 09:08:52,804:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-11 09:08:52,850:INFO:version 3.3.2
2024-11-11 09:08:52,851:INFO:Initializing setup()
2024-11-11 09:08:52,851:INFO:self.USI: 298f
2024-11-11 09:08:52,851:INFO:self._variable_keys: {'USI', 'seed', 'idx', 'logging_param', 'fold_shuffle_param', '_ml_usecase', 'memory', 'X_test', 'n_jobs_param', 'exp_id', 'fold_generator', 'is_multiclass', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'log_plots_param', 'y_test', 'fix_imbalance', 'exp_name_log', 'pipeline', 'target_param', 'y', 'y_train', 'data', 'fold_groups_param', 'X', '_available_plots', 'X_train'}
2024-11-11 09:08:52,854:INFO:Checking environment
2024-11-11 09:08:52,854:INFO:python_version: 3.9.12
2024-11-11 09:08:52,854:INFO:python_build: ('main', 'Jun  1 2022 11:38:51')
2024-11-11 09:08:52,854:INFO:machine: x86_64
2024-11-11 09:08:52,854:INFO:platform: Linux-5.10.0-31-amd64-x86_64-with-glibc2.31
2024-11-11 09:08:52,855:INFO:Memory: svmem(total=33389195264, available=21931081728, percent=34.3, used=10916478976, free=20386201600, active=500043776, inactive=11317473280, buffers=24576, cached=2086490112, shared=62087168, slab=658497536)
2024-11-11 09:08:52,894:INFO:Physical Core: 4
2024-11-11 09:08:52,960:INFO:Logical Core: 8
2024-11-11 09:08:52,960:INFO:Checking libraries
2024-11-11 09:08:52,960:INFO:System:
2024-11-11 09:08:52,961:INFO:    python: 3.9.12 (main, Jun  1 2022, 11:38:51)  [GCC 7.5.0]
2024-11-11 09:08:52,983:INFO:executable: /home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/bin/python
2024-11-11 09:08:52,983:INFO:   machine: Linux-5.10.0-31-amd64-x86_64-with-glibc2.31
2024-11-11 09:08:52,983:INFO:PyCaret required dependencies:
2024-11-11 09:08:54,581:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:08:54,972:INFO:                 pip: 24.0
2024-11-11 09:08:54,972:INFO:          setuptools: 69.5.1
2024-11-11 09:08:54,972:INFO:             pycaret: 3.3.2
2024-11-11 09:08:54,975:INFO:             IPython: 8.15.0
2024-11-11 09:08:54,975:INFO:          ipywidgets: 8.1.5
2024-11-11 09:08:54,975:INFO:                tqdm: 4.67.0
2024-11-11 09:08:54,975:INFO:               numpy: 1.20.3
2024-11-11 09:08:54,975:INFO:              pandas: 1.5.3
2024-11-11 09:08:54,976:INFO:              jinja2: 3.1.4
2024-11-11 09:08:54,976:INFO:               scipy: 1.10.1
2024-11-11 09:08:54,978:INFO:              joblib: 1.3.2
2024-11-11 09:08:54,978:INFO:             sklearn: 1.4.2
2024-11-11 09:08:54,978:INFO:                pyod: 2.0.2
2024-11-11 09:08:54,978:INFO:            imblearn: 0.12.4
2024-11-11 09:08:54,979:INFO:   category_encoders: 2.6.4
2024-11-11 09:08:54,979:INFO:            lightgbm: 4.5.0
2024-11-11 09:08:54,979:INFO:               numba: 0.60.0
2024-11-11 09:08:54,979:INFO:            requests: 2.32.3
2024-11-11 09:08:55,017:INFO:          matplotlib: 3.4.3
2024-11-11 09:08:55,017:INFO:          scikitplot: 0.3.7
2024-11-11 09:08:55,018:INFO:         yellowbrick: 1.5
2024-11-11 09:08:55,018:INFO:              plotly: 5.24.1
2024-11-11 09:08:55,018:INFO:    plotly-resampler: Not installed
2024-11-11 09:08:55,018:INFO:             kaleido: 0.2.1
2024-11-11 09:08:55,018:INFO:           schemdraw: 0.15
2024-11-11 09:08:55,018:INFO:         statsmodels: 0.14.4
2024-11-11 09:08:55,018:INFO:              sktime: 0.26.0
2024-11-11 09:08:55,019:INFO:               tbats: 1.1.3
2024-11-11 09:08:55,019:INFO:            pmdarima: 2.0.4
2024-11-11 09:08:55,019:INFO:              psutil: 5.9.0
2024-11-11 09:08:55,019:INFO:          markupsafe: 2.1.3
2024-11-11 09:08:55,019:INFO:             pickle5: Not installed
2024-11-11 09:08:55,019:INFO:         cloudpickle: 3.0.0
2024-11-11 09:08:55,019:INFO:         deprecation: 2.1.0
2024-11-11 09:08:55,019:INFO:              xxhash: 3.5.0
2024-11-11 09:08:55,020:INFO:           wurlitzer: 3.1.1
2024-11-11 09:08:55,020:INFO:PyCaret optional dependencies:
2024-11-11 09:08:55,080:INFO:                shap: Not installed
2024-11-11 09:08:55,080:INFO:           interpret: Not installed
2024-11-11 09:08:55,080:INFO:                umap: Not installed
2024-11-11 09:08:55,080:INFO:     ydata_profiling: Not installed
2024-11-11 09:08:55,082:INFO:  explainerdashboard: Not installed
2024-11-11 09:08:55,082:INFO:             autoviz: Not installed
2024-11-11 09:08:55,082:INFO:           fairlearn: Not installed
2024-11-11 09:08:55,082:INFO:          deepchecks: Not installed
2024-11-11 09:08:55,082:INFO:             xgboost: Not installed
2024-11-11 09:08:55,082:INFO:            catboost: Not installed
2024-11-11 09:08:55,083:INFO:              kmodes: Not installed
2024-11-11 09:08:55,083:INFO:             mlxtend: Not installed
2024-11-11 09:08:55,083:INFO:       statsforecast: Not installed
2024-11-11 09:08:55,083:INFO:        tune_sklearn: Not installed
2024-11-11 09:08:55,083:INFO:                 ray: Not installed
2024-11-11 09:08:55,083:INFO:            hyperopt: Not installed
2024-11-11 09:08:55,083:INFO:              optuna: Not installed
2024-11-11 09:08:55,083:INFO:               skopt: Not installed
2024-11-11 09:08:55,083:INFO:              mlflow: Not installed
2024-11-11 09:08:55,083:INFO:              gradio: Not installed
2024-11-11 09:08:55,085:INFO:             fastapi: Not installed
2024-11-11 09:08:55,085:INFO:             uvicorn: Not installed
2024-11-11 09:08:55,085:INFO:              m2cgen: Not installed
2024-11-11 09:08:55,085:INFO:           evidently: Not installed
2024-11-11 09:08:55,085:INFO:               fugue: Not installed
2024-11-11 09:08:55,085:INFO:           streamlit: Not installed
2024-11-11 09:08:55,085:INFO:             prophet: Not installed
2024-11-11 09:08:55,085:INFO:None
2024-11-11 09:08:55,085:INFO:Set up data.
2024-11-11 09:08:55,258:INFO:Set up folding strategy.
2024-11-11 09:08:55,258:INFO:Set up train/test split.
2024-11-11 09:08:55,360:INFO:Set up index.
2024-11-11 09:08:55,361:INFO:Assigning column types.
2024-11-11 09:08:55,401:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-11 09:08:55,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-11 09:08:55,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 09:08:55,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-11 09:08:55,676:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 09:08:55,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,705:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-11 09:08:55,740:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 09:08:55,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,796:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 09:08:55,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,822:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-11 09:08:55,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:55,957:INFO:Preparing preprocessing pipeline...
2024-11-11 09:08:55,966:INFO:Set up label encoding.
2024-11-11 09:08:55,973:INFO:Set up simple imputation.
2024-11-11 09:08:56,030:INFO:Finished creating preprocessing pipeline.
2024-11-11 09:08:56,066:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PC1', 'PC2', 'PC3', 'PC4', 'PC5',
                                             'PC6', 'PC7', 'PC8', 'PC9', 'PC10',
                                             'PC11', 'PC12', 'PC13', 'PC14',
                                             'PC15', 'PC16', 'PC17', 'PC18',
                                             'PC19', 'PC20...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-11 09:08:56,066:INFO:Creating final display dataframe.
2024-11-11 09:08:56,224:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                  42  
1                                          habit_type  
2                                          Multiclass  
3   aggregate: 0, bullet_rosette: 1, capped_column...  
4                                           (440, 64)  
5                                           (440, 64)  
6                                           (308, 64)  
7                                           (132, 64)  
8                                                  63  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               298f  
2024-11-11 09:08:56,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:56,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:56,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:56,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 09:08:56,353:INFO:setup() successfully completed in 3.56s...............
2024-11-11 09:08:56,376:INFO:Initializing compare_models()
2024-11-11 09:08:56,376:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-11 09:08:56,376:INFO:Checking exceptions
2024-11-11 09:08:56,384:INFO:Preparing display monitor
2024-11-11 09:08:56,455:INFO:Initializing Logistic Regression
2024-11-11 09:08:56,455:INFO:Total runtime is 1.8596649169921875e-06 minutes
2024-11-11 09:08:56,459:INFO:SubProcess create_model() called ==================================
2024-11-11 09:08:56,470:INFO:Initializing create_model()
2024-11-11 09:08:56,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:08:56,494:INFO:Checking exceptions
2024-11-11 09:08:56,494:INFO:Importing libraries
2024-11-11 09:08:56,495:INFO:Copying training dataset
2024-11-11 09:08:56,531:INFO:Defining folds
2024-11-11 09:08:56,531:INFO:Declaring metric variables
2024-11-11 09:08:56,536:INFO:Importing untrained model
2024-11-11 09:08:56,591:INFO:Logistic Regression Imported successfully
2024-11-11 09:08:56,606:INFO:Starting cross validation
2024-11-11 09:08:56,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:03,092:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,092:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,093:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,093:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,093:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,094:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,095:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,096:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 09:09:03,999:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:03,999:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:03,999:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:03,999:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:03,999:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:03,999:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:04,003:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:04,006:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,082:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,084:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,116:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,116:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,116:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,116:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,117:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,117:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,118:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,147:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,147:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,148:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,148:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,149:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,150:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,150:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,150:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,156:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:04,156:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:04,169:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:04,169:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:04,171:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,174:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,178:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,179:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,184:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,186:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,202:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:04,204:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,204:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,240:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,722:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:04,731:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 09:09:04,732:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,737:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,748:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:04,750:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,752:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,789:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,789:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,805:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:04,824:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:04,851:INFO:Calculating mean and std
2024-11-11 09:09:04,856:INFO:Creating metrics dataframe
2024-11-11 09:09:04,898:INFO:Uploading results into container
2024-11-11 09:09:04,900:INFO:Uploading model into container now
2024-11-11 09:09:04,903:INFO:_master_model_container: 1
2024-11-11 09:09:04,909:INFO:_display_container: 2
2024-11-11 09:09:04,911:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-11 09:09:04,918:INFO:create_model() successfully completed......................................
2024-11-11 09:09:05,057:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:05,058:INFO:Creating metrics dataframe
2024-11-11 09:09:05,069:INFO:Initializing K Neighbors Classifier
2024-11-11 09:09:05,069:INFO:Total runtime is 0.14356614351272584 minutes
2024-11-11 09:09:05,074:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:05,076:INFO:Initializing create_model()
2024-11-11 09:09:05,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:05,076:INFO:Checking exceptions
2024-11-11 09:09:05,076:INFO:Importing libraries
2024-11-11 09:09:05,076:INFO:Copying training dataset
2024-11-11 09:09:05,093:INFO:Defining folds
2024-11-11 09:09:05,093:INFO:Declaring metric variables
2024-11-11 09:09:05,100:INFO:Importing untrained model
2024-11-11 09:09:05,104:INFO:K Neighbors Classifier Imported successfully
2024-11-11 09:09:05,111:INFO:Starting cross validation
2024-11-11 09:09:05,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:05,412:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,413:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,419:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,423:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,423:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,431:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,436:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,436:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,436:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,437:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,446:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,439:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,447:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,448:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,449:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,449:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,449:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,449:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,455:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,455:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,455:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,456:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,457:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,457:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,458:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,478:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,479:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,479:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,479:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,486:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,496:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,506:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,508:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,520:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,529:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,530:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,537:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,545:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,559:INFO:Calculating mean and std
2024-11-11 09:09:05,561:INFO:Creating metrics dataframe
2024-11-11 09:09:05,570:INFO:Uploading results into container
2024-11-11 09:09:05,579:INFO:Uploading model into container now
2024-11-11 09:09:05,586:INFO:_master_model_container: 2
2024-11-11 09:09:05,593:INFO:_display_container: 2
2024-11-11 09:09:05,595:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-11 09:09:05,602:INFO:create_model() successfully completed......................................
2024-11-11 09:09:05,728:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:05,728:INFO:Creating metrics dataframe
2024-11-11 09:09:05,741:INFO:Initializing Naive Bayes
2024-11-11 09:09:05,742:INFO:Total runtime is 0.15477435588836672 minutes
2024-11-11 09:09:05,746:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:05,753:INFO:Initializing create_model()
2024-11-11 09:09:05,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:05,753:INFO:Checking exceptions
2024-11-11 09:09:05,753:INFO:Importing libraries
2024-11-11 09:09:05,753:INFO:Copying training dataset
2024-11-11 09:09:05,769:INFO:Defining folds
2024-11-11 09:09:05,769:INFO:Declaring metric variables
2024-11-11 09:09:05,773:INFO:Importing untrained model
2024-11-11 09:09:05,781:INFO:Naive Bayes Imported successfully
2024-11-11 09:09:05,794:INFO:Starting cross validation
2024-11-11 09:09:05,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:05,873:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,874:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,879:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,882:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,883:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,887:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,887:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,889:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,890:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,890:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,894:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,896:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,896:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,897:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,898:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,899:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,899:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,905:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,905:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,905:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,907:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,908:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,920:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,920:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,920:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,920:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,922:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,937:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,937:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,937:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,937:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,945:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,946:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,949:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,954:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,957:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,957:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,969:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:05,979:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:05,992:INFO:Calculating mean and std
2024-11-11 09:09:05,994:INFO:Creating metrics dataframe
2024-11-11 09:09:06,003:INFO:Uploading results into container
2024-11-11 09:09:06,010:INFO:Uploading model into container now
2024-11-11 09:09:06,018:INFO:_master_model_container: 3
2024-11-11 09:09:06,018:INFO:_display_container: 2
2024-11-11 09:09:06,018:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-11 09:09:06,026:INFO:create_model() successfully completed......................................
2024-11-11 09:09:06,120:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:06,120:INFO:Creating metrics dataframe
2024-11-11 09:09:06,131:INFO:Initializing Decision Tree Classifier
2024-11-11 09:09:06,131:INFO:Total runtime is 0.16126143534978232 minutes
2024-11-11 09:09:06,135:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:06,136:INFO:Initializing create_model()
2024-11-11 09:09:06,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:06,143:INFO:Checking exceptions
2024-11-11 09:09:06,143:INFO:Importing libraries
2024-11-11 09:09:06,143:INFO:Copying training dataset
2024-11-11 09:09:06,158:INFO:Defining folds
2024-11-11 09:09:06,170:INFO:Declaring metric variables
2024-11-11 09:09:06,177:INFO:Importing untrained model
2024-11-11 09:09:06,183:INFO:Decision Tree Classifier Imported successfully
2024-11-11 09:09:06,202:INFO:Starting cross validation
2024-11-11 09:09:06,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:06,293:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,298:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,300:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,302:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,306:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,306:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,308:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,312:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,321:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,323:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,323:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,323:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,323:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,332:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,333:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,333:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,334:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,338:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,340:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,341:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,353:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,353:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,364:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,365:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,372:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,379:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,388:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,388:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,394:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,397:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,403:INFO:Calculating mean and std
2024-11-11 09:09:06,405:INFO:Creating metrics dataframe
2024-11-11 09:09:06,407:INFO:Uploading results into container
2024-11-11 09:09:06,412:INFO:Uploading model into container now
2024-11-11 09:09:06,412:INFO:_master_model_container: 4
2024-11-11 09:09:06,426:INFO:_display_container: 2
2024-11-11 09:09:06,427:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-11-11 09:09:06,427:INFO:create_model() successfully completed......................................
2024-11-11 09:09:06,524:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:06,525:INFO:Creating metrics dataframe
2024-11-11 09:09:06,538:INFO:Initializing SVM - Linear Kernel
2024-11-11 09:09:06,538:INFO:Total runtime is 0.16805097262064617 minutes
2024-11-11 09:09:06,543:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:06,544:INFO:Initializing create_model()
2024-11-11 09:09:06,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:06,551:INFO:Checking exceptions
2024-11-11 09:09:06,551:INFO:Importing libraries
2024-11-11 09:09:06,551:INFO:Copying training dataset
2024-11-11 09:09:06,569:INFO:Defining folds
2024-11-11 09:09:06,570:INFO:Declaring metric variables
2024-11-11 09:09:06,576:INFO:Importing untrained model
2024-11-11 09:09:06,582:INFO:SVM - Linear Kernel Imported successfully
2024-11-11 09:09:06,591:INFO:Starting cross validation
2024-11-11 09:09:06,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:06,801:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,801:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,801:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,801:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,804:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,801:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,802:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,802:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,804:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,805:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,805:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,806:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,823:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,823:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,823:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,824:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,826:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,828:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,829:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,826:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,827:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,829:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,829:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,830:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,831:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,833:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,852:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,852:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,854:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,854:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,854:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,855:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,854:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,857:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:06,863:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,865:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,866:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,863:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,867:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,874:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,981:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,983:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,986:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:06,996:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:06,998:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,001:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,001:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,003:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,004:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,009:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,025:INFO:Calculating mean and std
2024-11-11 09:09:07,029:INFO:Creating metrics dataframe
2024-11-11 09:09:07,037:INFO:Uploading results into container
2024-11-11 09:09:07,039:INFO:Uploading model into container now
2024-11-11 09:09:07,041:INFO:_master_model_container: 5
2024-11-11 09:09:07,042:INFO:_display_container: 2
2024-11-11 09:09:07,044:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-11 09:09:07,045:INFO:create_model() successfully completed......................................
2024-11-11 09:09:07,177:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:07,178:INFO:Creating metrics dataframe
2024-11-11 09:09:07,191:INFO:Initializing Ridge Classifier
2024-11-11 09:09:07,191:INFO:Total runtime is 0.17893910010655723 minutes
2024-11-11 09:09:07,196:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:07,197:INFO:Initializing create_model()
2024-11-11 09:09:07,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:07,198:INFO:Checking exceptions
2024-11-11 09:09:07,198:INFO:Importing libraries
2024-11-11 09:09:07,198:INFO:Copying training dataset
2024-11-11 09:09:07,213:INFO:Defining folds
2024-11-11 09:09:07,213:INFO:Declaring metric variables
2024-11-11 09:09:07,218:INFO:Importing untrained model
2024-11-11 09:09:07,222:INFO:Ridge Classifier Imported successfully
2024-11-11 09:09:07,230:INFO:Starting cross validation
2024-11-11 09:09:07,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:07,588:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,588:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,588:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,588:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,589:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,589:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,589:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,590:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,591:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,591:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,591:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,631:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,631:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,631:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,631:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,632:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,634:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,635:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,635:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,637:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,637:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,638:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,639:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,639:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,643:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,643:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,643:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,643:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,643:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,644:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,644:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,646:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,649:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,658:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,702:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,704:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,706:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:07,709:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,709:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,717:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:07,719:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,720:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,724:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:07,732:INFO:Calculating mean and std
2024-11-11 09:09:07,733:INFO:Creating metrics dataframe
2024-11-11 09:09:07,736:INFO:Uploading results into container
2024-11-11 09:09:07,737:INFO:Uploading model into container now
2024-11-11 09:09:07,739:INFO:_master_model_container: 6
2024-11-11 09:09:07,739:INFO:_display_container: 2
2024-11-11 09:09:07,739:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-11-11 09:09:07,741:INFO:create_model() successfully completed......................................
2024-11-11 09:09:07,837:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:07,837:INFO:Creating metrics dataframe
2024-11-11 09:09:07,850:INFO:Initializing Random Forest Classifier
2024-11-11 09:09:07,851:INFO:Total runtime is 0.18992481231689454 minutes
2024-11-11 09:09:07,855:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:07,855:INFO:Initializing create_model()
2024-11-11 09:09:07,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:07,857:INFO:Checking exceptions
2024-11-11 09:09:07,857:INFO:Importing libraries
2024-11-11 09:09:07,857:INFO:Copying training dataset
2024-11-11 09:09:07,872:INFO:Defining folds
2024-11-11 09:09:07,872:INFO:Declaring metric variables
2024-11-11 09:09:07,877:INFO:Importing untrained model
2024-11-11 09:09:07,890:INFO:Random Forest Classifier Imported successfully
2024-11-11 09:09:07,927:INFO:Starting cross validation
2024-11-11 09:09:07,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:08,543:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,544:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,544:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,549:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,551:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,568:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,568:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,568:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,571:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,572:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,572:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,574:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,575:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,575:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,577:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,582:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,584:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,588:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,589:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,592:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,593:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,595:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,597:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,597:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,598:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,606:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,608:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,609:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,612:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,877:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,879:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,879:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,880:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,881:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,882:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:08,883:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,892:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:08,900:INFO:Calculating mean and std
2024-11-11 09:09:08,901:INFO:Creating metrics dataframe
2024-11-11 09:09:08,904:INFO:Uploading results into container
2024-11-11 09:09:08,905:INFO:Uploading model into container now
2024-11-11 09:09:08,905:INFO:_master_model_container: 7
2024-11-11 09:09:08,907:INFO:_display_container: 2
2024-11-11 09:09:08,907:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 09:09:08,907:INFO:create_model() successfully completed......................................
2024-11-11 09:09:08,998:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:08,998:INFO:Creating metrics dataframe
2024-11-11 09:09:09,012:INFO:Initializing Quadratic Discriminant Analysis
2024-11-11 09:09:09,012:INFO:Total runtime is 0.20927841265996297 minutes
2024-11-11 09:09:09,016:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:09,018:INFO:Initializing create_model()
2024-11-11 09:09:09,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:09,019:INFO:Checking exceptions
2024-11-11 09:09:09,019:INFO:Importing libraries
2024-11-11 09:09:09,019:INFO:Copying training dataset
2024-11-11 09:09:09,034:INFO:Defining folds
2024-11-11 09:09:09,034:INFO:Declaring metric variables
2024-11-11 09:09:09,038:INFO:Importing untrained model
2024-11-11 09:09:09,042:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-11 09:09:09,050:INFO:Starting cross validation
2024-11-11 09:09:09,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:09,198:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,198:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,198:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,198:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,198:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,199:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,210:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,210:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,278:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,279:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,281:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,282:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,281:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,283:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,287:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,291:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,291:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,291:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,288:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,297:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,298:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,302:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,302:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,303:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,303:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,304:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,304:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,306:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,307:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,309:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,310:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,311:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:09,312:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:09,312:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,315:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,319:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:09,320:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,320:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,323:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,323:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,329:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,346:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,347:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-11 09:09:09,366:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,368:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:09,368:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,369:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,371:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,377:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,377:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,400:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:09,406:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:09,429:INFO:Calculating mean and std
2024-11-11 09:09:09,433:INFO:Creating metrics dataframe
2024-11-11 09:09:09,442:INFO:Uploading results into container
2024-11-11 09:09:09,444:INFO:Uploading model into container now
2024-11-11 09:09:09,447:INFO:_master_model_container: 8
2024-11-11 09:09:09,448:INFO:_display_container: 2
2024-11-11 09:09:09,449:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-11 09:09:09,451:INFO:create_model() successfully completed......................................
2024-11-11 09:09:09,570:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:09,570:INFO:Creating metrics dataframe
2024-11-11 09:09:09,585:INFO:Initializing Ada Boost Classifier
2024-11-11 09:09:09,585:INFO:Total runtime is 0.21882598400115966 minutes
2024-11-11 09:09:09,589:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:09,590:INFO:Initializing create_model()
2024-11-11 09:09:09,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:09,591:INFO:Checking exceptions
2024-11-11 09:09:09,591:INFO:Importing libraries
2024-11-11 09:09:09,591:INFO:Copying training dataset
2024-11-11 09:09:09,607:INFO:Defining folds
2024-11-11 09:09:09,607:INFO:Declaring metric variables
2024-11-11 09:09:09,612:INFO:Importing untrained model
2024-11-11 09:09:09,617:INFO:Ada Boost Classifier Imported successfully
2024-11-11 09:09:09,624:INFO:Starting cross validation
2024-11-11 09:09:09,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,680:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:09,681:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:10,023:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,025:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,025:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,026:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,027:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,028:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,030:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,028:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,030:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,031:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,032:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,033:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,033:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,033:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,035:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,035:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,038:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,039:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,039:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,039:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,040:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,040:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,042:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,042:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,043:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,043:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,043:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,044:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,047:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,048:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,048:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,050:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,050:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,051:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,051:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,056:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,059:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,059:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,061:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,063:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,068:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:10,070:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 09:09:10,278:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,280:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,282:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:10,283:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,284:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,284:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,310:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,316:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,324:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:10,358:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:10,382:INFO:Calculating mean and std
2024-11-11 09:09:10,386:INFO:Creating metrics dataframe
2024-11-11 09:09:10,408:INFO:Uploading results into container
2024-11-11 09:09:10,427:INFO:Uploading model into container now
2024-11-11 09:09:10,429:INFO:_master_model_container: 9
2024-11-11 09:09:10,438:INFO:_display_container: 2
2024-11-11 09:09:10,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-11-11 09:09:10,477:INFO:create_model() successfully completed......................................
2024-11-11 09:09:10,597:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:10,597:INFO:Creating metrics dataframe
2024-11-11 09:09:10,612:INFO:Initializing Gradient Boosting Classifier
2024-11-11 09:09:10,612:INFO:Total runtime is 0.2359520117441813 minutes
2024-11-11 09:09:10,617:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:10,627:INFO:Initializing create_model()
2024-11-11 09:09:10,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:10,627:INFO:Checking exceptions
2024-11-11 09:09:10,627:INFO:Importing libraries
2024-11-11 09:09:10,627:INFO:Copying training dataset
2024-11-11 09:09:10,642:INFO:Defining folds
2024-11-11 09:09:10,659:INFO:Declaring metric variables
2024-11-11 09:09:10,664:INFO:Importing untrained model
2024-11-11 09:09:10,689:INFO:Gradient Boosting Classifier Imported successfully
2024-11-11 09:09:10,704:INFO:Starting cross validation
2024-11-11 09:09:10,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:22,072:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,075:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,093:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,109:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,113:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,134:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,141:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,248:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,248:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,248:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,248:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,248:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,539:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,249:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,539:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,540:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,540:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,540:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,597:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,597:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:22,598:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:22,598:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:22,598:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:22,599:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,599:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,608:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,608:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,608:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,608:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,608:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,614:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,619:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,984:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:22,986:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,989:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:22,992:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,827:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:29,829:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,832:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,838:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:29,840:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,841:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,856:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,857:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:29,872:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:29,893:INFO:Calculating mean and std
2024-11-11 09:09:29,894:INFO:Creating metrics dataframe
2024-11-11 09:09:29,897:INFO:Uploading results into container
2024-11-11 09:09:29,898:INFO:Uploading model into container now
2024-11-11 09:09:29,898:INFO:_master_model_container: 10
2024-11-11 09:09:29,900:INFO:_display_container: 2
2024-11-11 09:09:29,900:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-11 09:09:29,900:INFO:create_model() successfully completed......................................
2024-11-11 09:09:29,990:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:29,990:INFO:Creating metrics dataframe
2024-11-11 09:09:30,003:INFO:Initializing Linear Discriminant Analysis
2024-11-11 09:09:30,003:INFO:Total runtime is 0.5591312249501545 minutes
2024-11-11 09:09:30,007:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:30,008:INFO:Initializing create_model()
2024-11-11 09:09:30,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:30,010:INFO:Checking exceptions
2024-11-11 09:09:30,010:INFO:Importing libraries
2024-11-11 09:09:30,010:INFO:Copying training dataset
2024-11-11 09:09:30,025:INFO:Defining folds
2024-11-11 09:09:30,025:INFO:Declaring metric variables
2024-11-11 09:09:30,029:INFO:Importing untrained model
2024-11-11 09:09:30,034:INFO:Linear Discriminant Analysis Imported successfully
2024-11-11 09:09:30,042:INFO:Starting cross validation
2024-11-11 09:09:30,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:30,331:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,331:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,331:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,331:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,331:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,331:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,334:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,334:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,334:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,335:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,339:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,339:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,339:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,339:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,339:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,339:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,341:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,341:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,351:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,352:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,354:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,354:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,354:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,354:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,354:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,355:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,355:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,355:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,356:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,356:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,358:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,358:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,359:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,359:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,359:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,362:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,362:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,362:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,397:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,397:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 09:09:30,398:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,399:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,402:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,403:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,408:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,408:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:30,412:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,412:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:30,419:INFO:Calculating mean and std
2024-11-11 09:09:30,420:INFO:Creating metrics dataframe
2024-11-11 09:09:30,422:INFO:Uploading results into container
2024-11-11 09:09:30,423:INFO:Uploading model into container now
2024-11-11 09:09:30,423:INFO:_master_model_container: 11
2024-11-11 09:09:30,425:INFO:_display_container: 2
2024-11-11 09:09:30,426:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-11 09:09:30,426:INFO:create_model() successfully completed......................................
2024-11-11 09:09:30,520:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:30,520:INFO:Creating metrics dataframe
2024-11-11 09:09:30,534:INFO:Initializing Extra Trees Classifier
2024-11-11 09:09:30,534:INFO:Total runtime is 0.5679823954900105 minutes
2024-11-11 09:09:30,538:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:30,557:INFO:Initializing create_model()
2024-11-11 09:09:30,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:30,557:INFO:Checking exceptions
2024-11-11 09:09:30,557:INFO:Importing libraries
2024-11-11 09:09:30,557:INFO:Copying training dataset
2024-11-11 09:09:30,573:INFO:Defining folds
2024-11-11 09:09:30,573:INFO:Declaring metric variables
2024-11-11 09:09:30,577:INFO:Importing untrained model
2024-11-11 09:09:30,581:INFO:Extra Trees Classifier Imported successfully
2024-11-11 09:09:30,593:INFO:Starting cross validation
2024-11-11 09:09:30,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:09:31,052:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,054:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,056:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,063:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,075:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,078:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,063:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,079:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,081:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,081:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,087:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,088:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,088:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,089:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,094:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:31,097:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,101:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,105:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,109:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,114:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,115:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,116:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:31,128:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,135:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,139:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,145:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:31,147:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,329:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,333:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,335:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:09:31,343:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,343:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,353:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,361:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:09:31,380:INFO:Calculating mean and std
2024-11-11 09:09:31,385:INFO:Creating metrics dataframe
2024-11-11 09:09:31,396:INFO:Uploading results into container
2024-11-11 09:09:31,397:INFO:Uploading model into container now
2024-11-11 09:09:31,397:INFO:_master_model_container: 12
2024-11-11 09:09:31,416:INFO:_display_container: 2
2024-11-11 09:09:31,417:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-11-11 09:09:31,426:INFO:create_model() successfully completed......................................
2024-11-11 09:09:31,543:INFO:SubProcess create_model() end ==================================
2024-11-11 09:09:31,543:INFO:Creating metrics dataframe
2024-11-11 09:09:31,557:INFO:Initializing Light Gradient Boosting Machine
2024-11-11 09:09:31,558:INFO:Total runtime is 0.585041066010793 minutes
2024-11-11 09:09:31,562:INFO:SubProcess create_model() called ==================================
2024-11-11 09:09:31,563:INFO:Initializing create_model()
2024-11-11 09:09:31,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x150e999285e0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x150e644010a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 09:09:31,576:INFO:Checking exceptions
2024-11-11 09:09:31,576:INFO:Importing libraries
2024-11-11 09:09:31,576:INFO:Copying training dataset
2024-11-11 09:09:31,600:INFO:Defining folds
2024-11-11 09:09:31,601:INFO:Declaring metric variables
2024-11-11 09:09:31,614:INFO:Importing untrained model
2024-11-11 09:09:31,623:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-11 09:09:31,635:INFO:Starting cross validation
2024-11-11 09:09:31,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 09:55:40,976:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:55:40,983:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:55:41,001:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 09:55:41,016:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:56:27,583:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:56:27,607:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 09:56:27,610:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:00:41,851:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:00:41,887:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:00:41,909:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 10:00:41,926:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:00:55,596:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:00:55,600:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:00:55,634:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 10:00:55,636:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:03:37,300:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:03:37,316:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:03:37,340:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 10:03:37,350:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:20:06,798:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 10:20:06,798:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 10:20:06,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 10:20:06,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-11 10:20:18,086:INFO:PyCaret ClassificationExperiment
2024-11-11 10:20:18,086:INFO:Logging name: clf-default-name
2024-11-11 10:20:18,086:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-11 10:20:18,093:INFO:version 3.3.2
2024-11-11 10:20:18,093:INFO:Initializing setup()
2024-11-11 10:20:18,093:INFO:self.USI: aa4a
2024-11-11 10:20:18,093:INFO:self._variable_keys: {'y_train', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'n_jobs_param', 'is_multiclass', '_available_plots', 'seed', 'X', 'data', 'X_train', 'html_param', 'y', 'fold_shuffle_param', 'exp_id', 'logging_param', '_ml_usecase', 'y_test', 'gpu_param', 'USI', 'fix_imbalance', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_test', 'fold_generator', 'memory', 'pipeline'}
2024-11-11 10:20:18,093:INFO:Checking environment
2024-11-11 10:20:18,094:INFO:python_version: 3.9.12
2024-11-11 10:20:18,148:INFO:python_build: ('main', 'Jun  1 2022 11:38:51')
2024-11-11 10:20:18,148:INFO:machine: x86_64
2024-11-11 10:20:18,149:INFO:platform: Linux-5.10.0-31-amd64-x86_64-with-glibc2.31
2024-11-11 10:20:18,149:INFO:Memory: svmem(total=33389195264, available=21923012608, percent=34.3, used=10924519424, free=20354736128, active=1247653888, inactive=10595622912, buffers=24576, cached=2109915136, shared=62124032, slab=659881984)
2024-11-11 10:20:18,236:INFO:Physical Core: 4
2024-11-11 10:20:18,248:INFO:Logical Core: 8
2024-11-11 10:20:18,248:INFO:Checking libraries
2024-11-11 10:20:18,249:INFO:System:
2024-11-11 10:20:18,249:INFO:    python: 3.9.12 (main, Jun  1 2022, 11:38:51)  [GCC 7.5.0]
2024-11-11 10:20:18,274:INFO:executable: /home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/bin/python
2024-11-11 10:20:18,274:INFO:   machine: Linux-5.10.0-31-amd64-x86_64-with-glibc2.31
2024-11-11 10:20:18,274:INFO:PyCaret required dependencies:
2024-11-11 10:20:18,709:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:20:18,763:INFO:                 pip: 24.0
2024-11-11 10:20:18,763:INFO:          setuptools: 69.5.1
2024-11-11 10:20:18,763:INFO:             pycaret: 3.3.2
2024-11-11 10:20:18,763:INFO:             IPython: 8.15.0
2024-11-11 10:20:18,769:INFO:          ipywidgets: 8.1.5
2024-11-11 10:20:18,769:INFO:                tqdm: 4.67.0
2024-11-11 10:20:18,769:INFO:               numpy: 1.20.3
2024-11-11 10:20:18,769:INFO:              pandas: 1.5.3
2024-11-11 10:20:18,769:INFO:              jinja2: 3.1.4
2024-11-11 10:20:18,769:INFO:               scipy: 1.10.1
2024-11-11 10:20:18,769:INFO:              joblib: 1.3.2
2024-11-11 10:20:18,769:INFO:             sklearn: 1.4.2
2024-11-11 10:20:18,769:INFO:                pyod: 2.0.2
2024-11-11 10:20:18,769:INFO:            imblearn: 0.12.4
2024-11-11 10:20:18,769:INFO:   category_encoders: 2.6.4
2024-11-11 10:20:18,815:INFO:            lightgbm: 4.5.0
2024-11-11 10:20:18,815:INFO:               numba: 0.60.0
2024-11-11 10:20:18,816:INFO:            requests: 2.32.3
2024-11-11 10:20:18,816:INFO:          matplotlib: 3.4.3
2024-11-11 10:20:18,816:INFO:          scikitplot: 0.3.7
2024-11-11 10:20:18,818:INFO:         yellowbrick: 1.5
2024-11-11 10:20:18,819:INFO:              plotly: 5.24.1
2024-11-11 10:20:18,819:INFO:    plotly-resampler: Not installed
2024-11-11 10:20:18,819:INFO:             kaleido: 0.2.1
2024-11-11 10:20:18,819:INFO:           schemdraw: 0.15
2024-11-11 10:20:18,819:INFO:         statsmodels: 0.14.4
2024-11-11 10:20:18,828:INFO:              sktime: 0.26.0
2024-11-11 10:20:18,828:INFO:               tbats: 1.1.3
2024-11-11 10:20:18,828:INFO:            pmdarima: 2.0.4
2024-11-11 10:20:18,828:INFO:              psutil: 5.9.0
2024-11-11 10:20:18,866:INFO:          markupsafe: 2.1.3
2024-11-11 10:20:18,867:INFO:             pickle5: Not installed
2024-11-11 10:20:18,867:INFO:         cloudpickle: 3.0.0
2024-11-11 10:20:18,867:INFO:         deprecation: 2.1.0
2024-11-11 10:20:18,867:INFO:              xxhash: 3.5.0
2024-11-11 10:20:18,869:INFO:           wurlitzer: 3.1.1
2024-11-11 10:20:18,870:INFO:PyCaret optional dependencies:
2024-11-11 10:20:18,947:INFO:                shap: Not installed
2024-11-11 10:20:18,947:INFO:           interpret: Not installed
2024-11-11 10:20:18,947:INFO:                umap: Not installed
2024-11-11 10:20:18,950:INFO:     ydata_profiling: Not installed
2024-11-11 10:20:18,951:INFO:  explainerdashboard: Not installed
2024-11-11 10:20:18,951:INFO:             autoviz: Not installed
2024-11-11 10:20:18,951:INFO:           fairlearn: Not installed
2024-11-11 10:20:18,973:INFO:          deepchecks: Not installed
2024-11-11 10:20:18,973:INFO:             xgboost: Not installed
2024-11-11 10:20:18,974:INFO:            catboost: Not installed
2024-11-11 10:20:18,974:INFO:              kmodes: Not installed
2024-11-11 10:20:18,976:INFO:             mlxtend: Not installed
2024-11-11 10:20:18,976:INFO:       statsforecast: Not installed
2024-11-11 10:20:18,977:INFO:        tune_sklearn: Not installed
2024-11-11 10:20:18,977:INFO:                 ray: Not installed
2024-11-11 10:20:18,986:INFO:            hyperopt: Not installed
2024-11-11 10:20:18,986:INFO:              optuna: Not installed
2024-11-11 10:20:18,986:INFO:               skopt: Not installed
2024-11-11 10:20:18,986:INFO:              mlflow: Not installed
2024-11-11 10:20:18,986:INFO:              gradio: Not installed
2024-11-11 10:20:18,987:INFO:             fastapi: Not installed
2024-11-11 10:20:19,024:INFO:             uvicorn: Not installed
2024-11-11 10:20:19,025:INFO:              m2cgen: Not installed
2024-11-11 10:20:19,025:INFO:           evidently: Not installed
2024-11-11 10:20:19,025:INFO:               fugue: Not installed
2024-11-11 10:20:19,025:INFO:           streamlit: Not installed
2024-11-11 10:20:19,025:INFO:             prophet: Not installed
2024-11-11 10:20:19,028:INFO:None
2024-11-11 10:20:19,028:INFO:Set up data.
2024-11-11 10:20:19,066:INFO:Set up folding strategy.
2024-11-11 10:20:19,066:INFO:Set up train/test split.
2024-11-11 10:20:19,081:INFO:Set up index.
2024-11-11 10:20:19,082:INFO:Assigning column types.
2024-11-11 10:20:19,255:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-11 10:20:19,298:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-11 10:20:19,303:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:20:19,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-11 10:20:19,404:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:20:19,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,450:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-11 10:20:19,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:20:19,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,580:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:20:19,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,608:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-11 10:20:19,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:19,742:INFO:Preparing preprocessing pipeline...
2024-11-11 10:20:19,744:INFO:Set up label encoding.
2024-11-11 10:20:19,770:INFO:Set up simple imputation.
2024-11-11 10:20:19,818:INFO:Finished creating preprocessing pipeline.
2024-11-11 10:20:19,825:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PC1', 'PC2', 'PC3', 'PC4', 'PC5',
                                             'PC6', 'PC7', 'PC8', 'PC9', 'PC10',
                                             'PC11', 'PC12', 'PC13', 'PC14',
                                             'PC15', 'PC16', 'PC17', 'PC18',
                                             'PC19', 'PC20...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-11 10:20:19,825:INFO:Creating final display dataframe.
2024-11-11 10:20:19,963:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                  42  
1                                          habit_type  
2                                          Multiclass  
3   aggregate: 0, bullet_rosette: 1, capped_column...  
4                                           (440, 64)  
5                                           (440, 64)  
6                                           (308, 64)  
7                                           (132, 64)  
8                                                  63  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               aa4a  
2024-11-11 10:20:20,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:20,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:20,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:20,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:20:20,096:INFO:setup() successfully completed in 2.02s...............
2024-11-11 10:21:16,180:INFO:PyCaret ClassificationExperiment
2024-11-11 10:21:16,180:INFO:Logging name: clf-default-name
2024-11-11 10:21:16,180:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-11 10:21:16,180:INFO:version 3.3.2
2024-11-11 10:21:16,182:INFO:Initializing setup()
2024-11-11 10:21:16,182:INFO:self.USI: 0088
2024-11-11 10:21:16,182:INFO:self._variable_keys: {'y_train', 'fold_groups_param', 'log_plots_param', 'exp_name_log', 'n_jobs_param', 'is_multiclass', '_available_plots', 'seed', 'X', 'data', 'X_train', 'html_param', 'y', 'fold_shuffle_param', 'exp_id', 'logging_param', '_ml_usecase', 'y_test', 'gpu_param', 'USI', 'fix_imbalance', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_test', 'fold_generator', 'memory', 'pipeline'}
2024-11-11 10:21:16,182:INFO:Checking environment
2024-11-11 10:21:16,182:INFO:python_version: 3.9.12
2024-11-11 10:21:16,182:INFO:python_build: ('main', 'Jun  1 2022 11:38:51')
2024-11-11 10:21:16,182:INFO:machine: x86_64
2024-11-11 10:21:16,182:INFO:platform: Linux-5.10.0-31-amd64-x86_64-with-glibc2.31
2024-11-11 10:21:16,182:INFO:Memory: svmem(total=33389195264, available=21919162368, percent=34.4, used=10928361472, free=20350861312, active=1247813632, inactive=10601725952, buffers=24576, cached=2109947904, shared=62124032, slab=659898368)
2024-11-11 10:21:16,183:INFO:Physical Core: 4
2024-11-11 10:21:16,219:INFO:Logical Core: 8
2024-11-11 10:21:16,219:INFO:Checking libraries
2024-11-11 10:21:16,219:INFO:System:
2024-11-11 10:21:16,219:INFO:    python: 3.9.12 (main, Jun  1 2022, 11:38:51)  [GCC 7.5.0]
2024-11-11 10:21:16,220:INFO:executable: /home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/bin/python
2024-11-11 10:21:16,229:INFO:   machine: Linux-5.10.0-31-amd64-x86_64-with-glibc2.31
2024-11-11 10:21:16,229:INFO:PyCaret required dependencies:
2024-11-11 10:21:16,230:INFO:                 pip: 24.0
2024-11-11 10:21:16,230:INFO:          setuptools: 69.5.1
2024-11-11 10:21:16,230:INFO:             pycaret: 3.3.2
2024-11-11 10:21:16,233:INFO:             IPython: 8.15.0
2024-11-11 10:21:16,233:INFO:          ipywidgets: 8.1.5
2024-11-11 10:21:16,233:INFO:                tqdm: 4.67.0
2024-11-11 10:21:16,233:INFO:               numpy: 1.20.3
2024-11-11 10:21:16,233:INFO:              pandas: 1.5.3
2024-11-11 10:21:16,234:INFO:              jinja2: 3.1.4
2024-11-11 10:21:16,236:INFO:               scipy: 1.10.1
2024-11-11 10:21:16,236:INFO:              joblib: 1.3.2
2024-11-11 10:21:16,236:INFO:             sklearn: 1.4.2
2024-11-11 10:21:16,237:INFO:                pyod: 2.0.2
2024-11-11 10:21:16,237:INFO:            imblearn: 0.12.4
2024-11-11 10:21:16,237:INFO:   category_encoders: 2.6.4
2024-11-11 10:21:16,237:INFO:            lightgbm: 4.5.0
2024-11-11 10:21:16,237:INFO:               numba: 0.60.0
2024-11-11 10:21:16,239:INFO:            requests: 2.32.3
2024-11-11 10:21:16,239:INFO:          matplotlib: 3.4.3
2024-11-11 10:21:16,240:INFO:          scikitplot: 0.3.7
2024-11-11 10:21:16,242:INFO:         yellowbrick: 1.5
2024-11-11 10:21:16,242:INFO:              plotly: 5.24.1
2024-11-11 10:21:16,242:INFO:    plotly-resampler: Not installed
2024-11-11 10:21:16,242:INFO:             kaleido: 0.2.1
2024-11-11 10:21:16,242:INFO:           schemdraw: 0.15
2024-11-11 10:21:16,243:INFO:         statsmodels: 0.14.4
2024-11-11 10:21:16,243:INFO:              sktime: 0.26.0
2024-11-11 10:21:16,245:INFO:               tbats: 1.1.3
2024-11-11 10:21:16,245:INFO:            pmdarima: 2.0.4
2024-11-11 10:21:16,245:INFO:              psutil: 5.9.0
2024-11-11 10:21:16,245:INFO:          markupsafe: 2.1.3
2024-11-11 10:21:16,246:INFO:             pickle5: Not installed
2024-11-11 10:21:16,246:INFO:         cloudpickle: 3.0.0
2024-11-11 10:21:16,246:INFO:         deprecation: 2.1.0
2024-11-11 10:21:16,301:INFO:              xxhash: 3.5.0
2024-11-11 10:21:16,302:INFO:           wurlitzer: 3.1.1
2024-11-11 10:21:16,302:INFO:PyCaret optional dependencies:
2024-11-11 10:21:16,302:INFO:                shap: Not installed
2024-11-11 10:21:16,302:INFO:           interpret: Not installed
2024-11-11 10:21:16,320:INFO:                umap: Not installed
2024-11-11 10:21:16,320:INFO:     ydata_profiling: Not installed
2024-11-11 10:21:16,320:INFO:  explainerdashboard: Not installed
2024-11-11 10:21:16,320:INFO:             autoviz: Not installed
2024-11-11 10:21:16,320:INFO:           fairlearn: Not installed
2024-11-11 10:21:16,328:INFO:          deepchecks: Not installed
2024-11-11 10:21:16,328:INFO:             xgboost: Not installed
2024-11-11 10:21:16,328:INFO:            catboost: Not installed
2024-11-11 10:21:16,329:INFO:              kmodes: Not installed
2024-11-11 10:21:16,329:INFO:             mlxtend: Not installed
2024-11-11 10:21:16,329:INFO:       statsforecast: Not installed
2024-11-11 10:21:16,337:INFO:        tune_sklearn: Not installed
2024-11-11 10:21:16,337:INFO:                 ray: Not installed
2024-11-11 10:21:16,337:INFO:            hyperopt: Not installed
2024-11-11 10:21:16,337:INFO:              optuna: Not installed
2024-11-11 10:21:16,338:INFO:               skopt: Not installed
2024-11-11 10:21:16,338:INFO:              mlflow: Not installed
2024-11-11 10:21:16,344:INFO:              gradio: Not installed
2024-11-11 10:21:16,345:INFO:             fastapi: Not installed
2024-11-11 10:21:16,345:INFO:             uvicorn: Not installed
2024-11-11 10:21:16,345:INFO:              m2cgen: Not installed
2024-11-11 10:21:16,345:INFO:           evidently: Not installed
2024-11-11 10:21:16,345:INFO:               fugue: Not installed
2024-11-11 10:21:16,353:INFO:           streamlit: Not installed
2024-11-11 10:21:16,353:INFO:             prophet: Not installed
2024-11-11 10:21:16,353:INFO:None
2024-11-11 10:21:16,354:INFO:Set up data.
2024-11-11 10:21:16,396:INFO:Set up folding strategy.
2024-11-11 10:21:16,396:INFO:Set up train/test split.
2024-11-11 10:21:16,407:INFO:Set up index.
2024-11-11 10:21:16,408:INFO:Assigning column types.
2024-11-11 10:21:16,419:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-11 10:21:16,457:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-11 10:21:16,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:21:16,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-11 10:21:16,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:21:16,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,542:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-11 10:21:16,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:21:16,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-11 10:21:16,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,662:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-11 10:21:16,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:16,797:INFO:Preparing preprocessing pipeline...
2024-11-11 10:21:16,805:INFO:Set up label encoding.
2024-11-11 10:21:16,811:INFO:Set up simple imputation.
2024-11-11 10:21:16,853:INFO:Finished creating preprocessing pipeline.
2024-11-11 10:21:16,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PC1', 'PC2', 'PC3', 'PC4', 'PC5',
                                             'PC6', 'PC7', 'PC8', 'PC9', 'PC10',
                                             'PC11', 'PC12', 'PC13', 'PC14',
                                             'PC15', 'PC16', 'PC17', 'PC18',
                                             'PC19', 'PC20...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-11-11 10:21:16,861:INFO:Creating final display dataframe.
2024-11-11 10:21:17,004:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                  42  
1                                          habit_type  
2                                          Multiclass  
3   aggregate: 0, bullet_rosette: 1, capped_column...  
4                                           (440, 64)  
5                                           (440, 64)  
6                                           (308, 64)  
7                                           (132, 64)  
8                                                  63  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                  5  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               0088  
2024-11-11 10:21:17,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:17,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:17,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:17,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-11 10:21:17,137:INFO:setup() successfully completed in 0.96s...............
2024-11-11 10:22:31,052:INFO:Initializing compare_models()
2024-11-11 10:22:31,053:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, include=['rf', 'logistic', 'xgboost', 'lightgbm'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, 'include': ['rf', 'logistic', 'xgboost', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-11 10:22:31,054:INFO:Checking exceptions
2024-11-11 10:33:55,570:INFO:Initializing compare_models()
2024-11-11 10:33:55,571:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, include=['rf', 'lr', 'xgboost', 'lightgbm', 'svm', 'et', 'ada'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, 'include': ['rf', 'lr', 'xgboost', 'lightgbm', 'svm', 'et', 'ada'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-11 10:33:55,571:INFO:Checking exceptions
2024-11-11 10:34:14,201:INFO:Initializing compare_models()
2024-11-11 10:34:14,201:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, include=['rf', 'lr', 'xgboost', 'lightgbm', 'svm', 'et', 'ada'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, 'include': ['rf', 'lr', 'xgboost', 'lightgbm', 'svm', 'et', 'ada'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-11 10:34:14,201:INFO:Checking exceptions
2024-11-11 10:35:23,798:INFO:Initializing compare_models()
2024-11-11 10:35:23,800:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, include=['rf', 'lr', 'lightgbm', 'svm', 'et', 'ada', 'catboost', 'gbc'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, 'include': ['rf', 'lr', 'lightgbm', 'svm', 'et', 'ada', 'catboost', 'gbc'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-11 10:35:23,864:INFO:Checking exceptions
2024-11-11 10:35:59,269:INFO:Initializing compare_models()
2024-11-11 10:35:59,270:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, include=['rf', 'lr', 'lightgbm', 'svm', 'et', 'ada', 'gbc'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, 'include': ['rf', 'lr', 'lightgbm', 'svm', 'et', 'ada', 'gbc'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-11-11 10:35:59,285:INFO:Checking exceptions
2024-11-11 10:35:59,315:INFO:Preparing display monitor
2024-11-11 10:35:59,355:INFO:Initializing Random Forest Classifier
2024-11-11 10:35:59,356:INFO:Total runtime is 2.6861826578776044e-06 minutes
2024-11-11 10:35:59,360:INFO:SubProcess create_model() called ==================================
2024-11-11 10:35:59,375:INFO:Initializing create_model()
2024-11-11 10:35:59,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 10:35:59,429:INFO:Checking exceptions
2024-11-11 10:35:59,429:INFO:Importing libraries
2024-11-11 10:35:59,452:INFO:Copying training dataset
2024-11-11 10:35:59,474:INFO:Defining folds
2024-11-11 10:35:59,474:INFO:Declaring metric variables
2024-11-11 10:35:59,477:INFO:Importing untrained model
2024-11-11 10:35:59,481:INFO:Random Forest Classifier Imported successfully
2024-11-11 10:35:59,513:INFO:Starting cross validation
2024-11-11 10:35:59,523:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 10:36:06,376:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:06,376:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:06,377:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:06,379:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:06,393:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:06,844:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,849:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,859:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,868:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,869:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,874:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,876:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,876:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,878:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,885:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,885:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,887:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,887:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,896:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,896:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:06,922:INFO:Calculating mean and std
2024-11-11 10:36:06,926:INFO:Creating metrics dataframe
2024-11-11 10:36:06,934:INFO:Uploading results into container
2024-11-11 10:36:06,941:INFO:Uploading model into container now
2024-11-11 10:36:06,949:INFO:_master_model_container: 1
2024-11-11 10:36:06,956:INFO:_display_container: 2
2024-11-11 10:36:06,958:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 10:36:06,965:INFO:create_model() successfully completed......................................
2024-11-11 10:36:07,119:INFO:SubProcess create_model() end ==================================
2024-11-11 10:36:07,119:INFO:Creating metrics dataframe
2024-11-11 10:36:07,131:INFO:Initializing Logistic Regression
2024-11-11 10:36:07,131:INFO:Total runtime is 0.1295882264773051 minutes
2024-11-11 10:36:07,136:INFO:SubProcess create_model() called ==================================
2024-11-11 10:36:07,136:INFO:Initializing create_model()
2024-11-11 10:36:07,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 10:36:07,138:INFO:Checking exceptions
2024-11-11 10:36:07,138:INFO:Importing libraries
2024-11-11 10:36:07,138:INFO:Copying training dataset
2024-11-11 10:36:07,157:INFO:Defining folds
2024-11-11 10:36:07,157:INFO:Declaring metric variables
2024-11-11 10:36:07,162:INFO:Importing untrained model
2024-11-11 10:36:07,168:INFO:Logistic Regression Imported successfully
2024-11-11 10:36:07,178:INFO:Starting cross validation
2024-11-11 10:36:07,180:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 10:36:07,731:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 10:36:07,734:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 10:36:07,751:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 10:36:07,761:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 10:36:07,767:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:07,767:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:07,814:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:07,815:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:07,835:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 10:36:07,837:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:07,884:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,144:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:09,237:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:09,302:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 10:36:09,518:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 10:36:09,528:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 10:36:09,534:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,551:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,598:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,599:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 10:36:09,629:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 10:36:09,646:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,669:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,681:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-11-11 10:36:09,685:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,693:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 10:36:09,736:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,761:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,777:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 10:36:09,825:INFO:Calculating mean and std
2024-11-11 10:36:09,838:INFO:Creating metrics dataframe
2024-11-11 10:36:09,880:INFO:Uploading results into container
2024-11-11 10:36:09,904:INFO:Uploading model into container now
2024-11-11 10:36:09,906:INFO:_master_model_container: 2
2024-11-11 10:36:09,906:INFO:_display_container: 2
2024-11-11 10:36:09,916:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-11 10:36:09,955:INFO:create_model() successfully completed......................................
2024-11-11 10:36:10,088:INFO:SubProcess create_model() end ==================================
2024-11-11 10:36:10,088:INFO:Creating metrics dataframe
2024-11-11 10:36:10,099:INFO:Initializing Light Gradient Boosting Machine
2024-11-11 10:36:10,103:INFO:Total runtime is 0.1791237235069275 minutes
2024-11-11 10:36:10,108:INFO:SubProcess create_model() called ==================================
2024-11-11 10:36:10,108:INFO:Initializing create_model()
2024-11-11 10:36:10,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 10:36:10,116:INFO:Checking exceptions
2024-11-11 10:36:10,116:INFO:Importing libraries
2024-11-11 10:36:10,116:INFO:Copying training dataset
2024-11-11 10:36:10,138:INFO:Defining folds
2024-11-11 10:36:10,154:INFO:Declaring metric variables
2024-11-11 10:36:10,160:INFO:Importing untrained model
2024-11-11 10:36:10,174:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-11 10:36:10,182:INFO:Starting cross validation
2024-11-11 10:36:10,184:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:16:26,392:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:16:26,411:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:16:26,470:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:16:55,420:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:16:55,435:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:16:55,456:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:02,640:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:02,663:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:02,666:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,797:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,813:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,817:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,879:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,882:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,959:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:06,990:INFO:Calculating mean and std
2024-11-11 11:17:07,015:INFO:Creating metrics dataframe
2024-11-11 11:17:07,042:INFO:Uploading results into container
2024-11-11 11:17:07,062:INFO:Uploading model into container now
2024-11-11 11:17:07,065:INFO:_master_model_container: 3
2024-11-11 11:17:07,065:INFO:_display_container: 2
2024-11-11 11:17:07,075:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-11 11:17:07,113:INFO:create_model() successfully completed......................................
2024-11-11 11:17:07,260:INFO:SubProcess create_model() end ==================================
2024-11-11 11:17:07,260:INFO:Creating metrics dataframe
2024-11-11 11:17:07,271:INFO:Initializing SVM - Linear Kernel
2024-11-11 11:17:07,278:INFO:Total runtime is 41.13204656044642 minutes
2024-11-11 11:17:07,283:INFO:SubProcess create_model() called ==================================
2024-11-11 11:17:07,284:INFO:Initializing create_model()
2024-11-11 11:17:07,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 11:17:07,290:INFO:Checking exceptions
2024-11-11 11:17:07,290:INFO:Importing libraries
2024-11-11 11:17:07,290:INFO:Copying training dataset
2024-11-11 11:17:07,304:INFO:Defining folds
2024-11-11 11:17:07,330:INFO:Declaring metric variables
2024-11-11 11:17:07,342:INFO:Importing untrained model
2024-11-11 11:17:07,356:INFO:SVM - Linear Kernel Imported successfully
2024-11-11 11:17:07,368:INFO:Starting cross validation
2024-11-11 11:17:07,383:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:17:07,557:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:07,560:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,560:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:07,576:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,571:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:07,580:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,585:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:07,591:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:07,592:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,593:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:07,593:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,593:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,595:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,639:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:07,639:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,641:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,642:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,642:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,642:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,651:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:07,651:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:07,651:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:07,698:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,699:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,699:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:07,721:INFO:Calculating mean and std
2024-11-11 11:17:07,738:INFO:Creating metrics dataframe
2024-11-11 11:17:07,743:INFO:Uploading results into container
2024-11-11 11:17:07,750:INFO:Uploading model into container now
2024-11-11 11:17:07,790:INFO:_master_model_container: 4
2024-11-11 11:17:07,803:INFO:_display_container: 2
2024-11-11 11:17:07,806:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-11 11:17:07,806:INFO:create_model() successfully completed......................................
2024-11-11 11:17:07,978:INFO:SubProcess create_model() end ==================================
2024-11-11 11:17:07,978:INFO:Creating metrics dataframe
2024-11-11 11:17:07,989:INFO:Initializing Extra Trees Classifier
2024-11-11 11:17:07,995:INFO:Total runtime is 41.14398752848307 minutes
2024-11-11 11:17:07,999:INFO:SubProcess create_model() called ==================================
2024-11-11 11:17:07,999:INFO:Initializing create_model()
2024-11-11 11:17:08,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 11:17:08,007:INFO:Checking exceptions
2024-11-11 11:17:08,007:INFO:Importing libraries
2024-11-11 11:17:08,007:INFO:Copying training dataset
2024-11-11 11:17:08,022:INFO:Defining folds
2024-11-11 11:17:08,055:INFO:Declaring metric variables
2024-11-11 11:17:08,058:INFO:Importing untrained model
2024-11-11 11:17:08,075:INFO:Extra Trees Classifier Imported successfully
2024-11-11 11:17:08,121:INFO:Starting cross validation
2024-11-11 11:17:08,124:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:17:08,472:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,476:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,489:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,490:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,490:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,494:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,502:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,504:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,504:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,505:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,557:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,557:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,563:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,564:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,578:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:08,616:INFO:Calculating mean and std
2024-11-11 11:17:08,624:INFO:Creating metrics dataframe
2024-11-11 11:17:08,639:INFO:Uploading results into container
2024-11-11 11:17:08,681:INFO:Uploading model into container now
2024-11-11 11:17:08,705:INFO:_master_model_container: 5
2024-11-11 11:17:08,729:INFO:_display_container: 2
2024-11-11 11:17:08,730:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-11-11 11:17:08,754:INFO:create_model() successfully completed......................................
2024-11-11 11:17:08,893:INFO:SubProcess create_model() end ==================================
2024-11-11 11:17:08,894:INFO:Creating metrics dataframe
2024-11-11 11:17:08,908:INFO:Initializing Ada Boost Classifier
2024-11-11 11:17:08,912:INFO:Total runtime is 41.15927120049795 minutes
2024-11-11 11:17:08,916:INFO:SubProcess create_model() called ==================================
2024-11-11 11:17:08,916:INFO:Initializing create_model()
2024-11-11 11:17:08,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 11:17:08,925:INFO:Checking exceptions
2024-11-11 11:17:08,925:INFO:Importing libraries
2024-11-11 11:17:08,925:INFO:Copying training dataset
2024-11-11 11:17:08,939:INFO:Defining folds
2024-11-11 11:17:08,948:INFO:Declaring metric variables
2024-11-11 11:17:08,952:INFO:Importing untrained model
2024-11-11 11:17:09,025:INFO:Ada Boost Classifier Imported successfully
2024-11-11 11:17:09,098:INFO:Starting cross validation
2024-11-11 11:17:09,116:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:17:09,207:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 11:17:09,208:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 11:17:09,456:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:09,458:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:09,473:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:09,480:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:09,482:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:09,558:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:09,560:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:09,580:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:09,580:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:09,583:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,203:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 11:17:15,203:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 11:17:15,204:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 11:17:15,261:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 11:17:15,267:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 11:17:15,272:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-11 11:17:15,478:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:15,482:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,482:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:15,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,490:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:15,505:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:15,506:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,506:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,526:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,527:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,528:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,551:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:15,551:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:17:15,569:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,569:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:15,626:INFO:Calculating mean and std
2024-11-11 11:17:15,628:INFO:Creating metrics dataframe
2024-11-11 11:17:15,633:INFO:Uploading results into container
2024-11-11 11:17:15,664:INFO:Uploading model into container now
2024-11-11 11:17:15,667:INFO:_master_model_container: 6
2024-11-11 11:17:15,690:INFO:_display_container: 2
2024-11-11 11:17:15,690:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-11-11 11:17:15,690:INFO:create_model() successfully completed......................................
2024-11-11 11:17:15,813:INFO:SubProcess create_model() end ==================================
2024-11-11 11:17:15,814:INFO:Creating metrics dataframe
2024-11-11 11:17:15,828:INFO:Initializing Gradient Boosting Classifier
2024-11-11 11:17:15,828:INFO:Total runtime is 41.27454613844554 minutes
2024-11-11 11:17:15,833:INFO:SubProcess create_model() called ==================================
2024-11-11 11:17:15,833:INFO:Initializing create_model()
2024-11-11 11:17:15,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355bbb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 11:17:15,841:INFO:Checking exceptions
2024-11-11 11:17:15,841:INFO:Importing libraries
2024-11-11 11:17:15,841:INFO:Copying training dataset
2024-11-11 11:17:15,856:INFO:Defining folds
2024-11-11 11:17:15,888:INFO:Declaring metric variables
2024-11-11 11:17:15,894:INFO:Importing untrained model
2024-11-11 11:17:15,921:INFO:Gradient Boosting Classifier Imported successfully
2024-11-11 11:17:15,963:INFO:Starting cross validation
2024-11-11 11:17:15,968:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:17:23,641:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:23,643:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:23,646:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:23,650:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:23,721:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:23,723:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:23,734:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:23,751:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:24,228:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:24,230:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:24,234:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:24,237:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:24,713:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:24,715:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:24,726:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:24,734:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:25,243:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-11-11 11:17:25,244:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:25,248:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:25,270:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:17:25,285:INFO:Calculating mean and std
2024-11-11 11:17:25,287:INFO:Creating metrics dataframe
2024-11-11 11:17:25,291:INFO:Uploading results into container
2024-11-11 11:17:25,298:INFO:Uploading model into container now
2024-11-11 11:17:25,307:INFO:_master_model_container: 7
2024-11-11 11:17:25,307:INFO:_display_container: 2
2024-11-11 11:17:25,308:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-11 11:17:25,315:INFO:create_model() successfully completed......................................
2024-11-11 11:17:25,420:INFO:SubProcess create_model() end ==================================
2024-11-11 11:17:25,420:INFO:Creating metrics dataframe
2024-11-11 11:17:25,433:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-11-11 11:17:25,444:INFO:Initializing create_model()
2024-11-11 11:17:25,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 11:17:25,444:INFO:Checking exceptions
2024-11-11 11:17:25,449:INFO:Importing libraries
2024-11-11 11:17:25,465:INFO:Copying training dataset
2024-11-11 11:17:25,477:INFO:Defining folds
2024-11-11 11:17:25,477:INFO:Declaring metric variables
2024-11-11 11:17:25,477:INFO:Importing untrained model
2024-11-11 11:17:25,481:INFO:Declaring custom model
2024-11-11 11:17:25,482:INFO:Random Forest Classifier Imported successfully
2024-11-11 11:17:25,491:INFO:Cross validation set to False
2024-11-11 11:17:25,498:INFO:Fitting Model
2024-11-11 11:17:25,693:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 11:17:25,693:INFO:create_model() successfully completed......................................
2024-11-11 11:17:25,846:INFO:_master_model_container: 7
2024-11-11 11:17:25,847:INFO:_display_container: 2
2024-11-11 11:17:25,847:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 11:17:25,857:INFO:compare_models() successfully completed......................................
2024-11-11 11:18:27,432:INFO:Initializing tune_model()
2024-11-11 11:18:27,434:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>)
2024-11-11 11:18:27,436:INFO:Checking exceptions
2024-11-11 11:18:27,480:INFO:Copying training dataset
2024-11-11 11:18:27,488:INFO:Checking base model
2024-11-11 11:18:27,489:INFO:Base model : Random Forest Classifier
2024-11-11 11:18:27,494:INFO:Declaring metric variables
2024-11-11 11:18:27,540:INFO:Defining Hyperparameters
2024-11-11 11:18:27,665:INFO:Tuning with n_jobs=-1
2024-11-11 11:18:27,665:INFO:Initializing RandomizedSearchCV
2024-11-11 11:18:35,345:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-11-11 11:18:35,346:INFO:Hyperparameter search completed
2024-11-11 11:18:35,356:INFO:SubProcess create_model() called ==================================
2024-11-11 11:18:35,357:INFO:Initializing create_model()
2024-11-11 11:18:35,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c355b490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': False})
2024-11-11 11:18:35,359:INFO:Checking exceptions
2024-11-11 11:18:35,359:INFO:Importing libraries
2024-11-11 11:18:35,359:INFO:Copying training dataset
2024-11-11 11:18:35,369:INFO:Defining folds
2024-11-11 11:18:35,369:INFO:Declaring metric variables
2024-11-11 11:18:35,373:INFO:Importing untrained model
2024-11-11 11:18:35,408:INFO:Declaring custom model
2024-11-11 11:18:35,416:INFO:Random Forest Classifier Imported successfully
2024-11-11 11:18:35,441:INFO:Starting cross validation
2024-11-11 11:18:35,444:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:18:36,873:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,879:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,881:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:18:36,891:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,911:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,913:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,928:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,932:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,942:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,954:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,966:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,984:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:18:36,984:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:36,985:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:37,008:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:18:37,008:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 11:18:37,009:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:37,022:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:37,023:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:37,067:INFO:Calculating mean and std
2024-11-11 11:18:37,070:INFO:Creating metrics dataframe
2024-11-11 11:18:37,108:INFO:Finalizing model
2024-11-11 11:18:37,549:INFO:Uploading results into container
2024-11-11 11:18:37,549:INFO:Uploading model into container now
2024-11-11 11:18:37,566:INFO:_master_model_container: 8
2024-11-11 11:18:37,566:INFO:_display_container: 3
2024-11-11 11:18:37,566:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 11:18:37,579:INFO:create_model() successfully completed......................................
2024-11-11 11:18:37,683:INFO:SubProcess create_model() end ==================================
2024-11-11 11:18:37,683:INFO:choose_better activated
2024-11-11 11:18:37,688:INFO:SubProcess create_model() called ==================================
2024-11-11 11:18:37,701:INFO:Initializing create_model()
2024-11-11 11:18:37,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 11:18:37,702:INFO:Checking exceptions
2024-11-11 11:18:37,708:INFO:Importing libraries
2024-11-11 11:18:37,711:INFO:Copying training dataset
2024-11-11 11:18:37,736:INFO:Defining folds
2024-11-11 11:18:37,749:INFO:Declaring metric variables
2024-11-11 11:18:37,750:INFO:Importing untrained model
2024-11-11 11:18:37,750:INFO:Declaring custom model
2024-11-11 11:18:37,751:INFO:Random Forest Classifier Imported successfully
2024-11-11 11:18:37,752:INFO:Starting cross validation
2024-11-11 11:18:37,753:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 11:18:38,260:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,265:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,278:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,279:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,293:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,297:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,297:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,302:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,304:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,304:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,304:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,314:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,315:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,315:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 11:18:38,371:INFO:Calculating mean and std
2024-11-11 11:18:38,382:INFO:Creating metrics dataframe
2024-11-11 11:18:38,398:INFO:Finalizing model
2024-11-11 11:18:38,704:INFO:Uploading results into container
2024-11-11 11:18:38,704:INFO:Uploading model into container now
2024-11-11 11:18:38,716:INFO:_master_model_container: 9
2024-11-11 11:18:38,716:INFO:_display_container: 4
2024-11-11 11:18:38,716:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 11:18:38,741:INFO:create_model() successfully completed......................................
2024-11-11 11:18:38,873:INFO:SubProcess create_model() end ==================================
2024-11-11 11:18:38,874:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.3799
2024-11-11 11:18:38,877:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.39
2024-11-11 11:18:38,886:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-11-11 11:18:38,925:INFO:choose_better completed
2024-11-11 11:18:38,957:INFO:_master_model_container: 9
2024-11-11 11:18:38,957:INFO:_display_container: 3
2024-11-11 11:18:38,958:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 11:18:38,962:INFO:tune_model() successfully completed......................................
2024-11-11 11:22:53,552:INFO:Initializing evaluate_model()
2024-11-11 11:22:53,553:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-11 11:22:53,705:INFO:Initializing plot_model()
2024-11-11 11:22:53,706:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 11:22:53,730:INFO:Checking exceptions
2024-11-11 11:22:53,859:INFO:Preloading libraries
2024-11-11 11:22:53,887:INFO:Copying training dataset
2024-11-11 11:22:53,892:INFO:Plot type: pipeline
2024-11-11 11:22:54,732:INFO:Visual Rendered Successfully
2024-11-11 11:22:54,843:INFO:plot_model() successfully completed......................................
2024-11-11 12:28:19,719:INFO:Initializing tune_model()
2024-11-11 12:28:19,720:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>)
2024-11-11 12:28:19,762:INFO:Checking exceptions
2024-11-11 12:28:19,806:INFO:Copying training dataset
2024-11-11 12:28:19,823:INFO:Checking base model
2024-11-11 12:28:19,843:INFO:Base model : Random Forest Classifier
2024-11-11 12:28:19,860:INFO:Declaring metric variables
2024-11-11 12:28:19,874:INFO:Defining Hyperparameters
2024-11-11 12:28:19,986:INFO:Tuning with n_jobs=-1
2024-11-11 12:28:19,986:INFO:Initializing RandomizedSearchCV
2024-11-11 12:28:26,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,485:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,486:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:26,486:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-11-11 12:28:34,023:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-11-11 12:28:34,024:INFO:Hyperparameter search completed
2024-11-11 12:28:34,027:INFO:SubProcess create_model() called ==================================
2024-11-11 12:28:34,028:INFO:Initializing create_model()
2024-11-11 12:28:34,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1498c3d73bb0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': False})
2024-11-11 12:28:34,051:INFO:Checking exceptions
2024-11-11 12:28:34,051:INFO:Importing libraries
2024-11-11 12:28:34,052:INFO:Copying training dataset
2024-11-11 12:28:34,095:INFO:Defining folds
2024-11-11 12:28:34,095:INFO:Declaring metric variables
2024-11-11 12:28:34,110:INFO:Importing untrained model
2024-11-11 12:28:34,111:INFO:Declaring custom model
2024-11-11 12:28:34,126:INFO:Random Forest Classifier Imported successfully
2024-11-11 12:28:34,152:INFO:Starting cross validation
2024-11-11 12:28:34,156:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 12:28:35,472:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,478:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,484:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,509:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,515:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,519:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 12:28:35,527:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,548:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,555:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,557:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 12:28:35,557:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,569:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,571:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,577:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 12:28:35,585:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,602:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,605:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,610:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-11 12:28:35,619:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:35,646:INFO:Calculating mean and std
2024-11-11 12:28:35,647:INFO:Creating metrics dataframe
2024-11-11 12:28:35,655:INFO:Finalizing model
2024-11-11 12:28:36,088:INFO:Uploading results into container
2024-11-11 12:28:36,089:INFO:Uploading model into container now
2024-11-11 12:28:36,092:INFO:_master_model_container: 10
2024-11-11 12:28:36,092:INFO:_display_container: 4
2024-11-11 12:28:36,093:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 12:28:36,107:INFO:create_model() successfully completed......................................
2024-11-11 12:28:36,237:INFO:SubProcess create_model() end ==================================
2024-11-11 12:28:36,237:INFO:choose_better activated
2024-11-11 12:28:36,243:INFO:SubProcess create_model() called ==================================
2024-11-11 12:28:36,244:INFO:Initializing create_model()
2024-11-11 12:28:36,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-11 12:28:36,251:INFO:Checking exceptions
2024-11-11 12:28:36,253:INFO:Importing libraries
2024-11-11 12:28:36,271:INFO:Copying training dataset
2024-11-11 12:28:36,285:INFO:Defining folds
2024-11-11 12:28:36,288:INFO:Declaring metric variables
2024-11-11 12:28:36,289:INFO:Importing untrained model
2024-11-11 12:28:36,289:INFO:Declaring custom model
2024-11-11 12:28:36,290:INFO:Random Forest Classifier Imported successfully
2024-11-11 12:28:36,292:INFO:Starting cross validation
2024-11-11 12:28:36,293:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-11-11 12:28:36,764:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,769:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,775:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,782:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,782:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,787:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,790:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,801:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,805:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,812:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,812:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,814:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,848:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,848:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,849:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'tiny') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-11 12:28:36,884:INFO:Calculating mean and std
2024-11-11 12:28:36,895:INFO:Creating metrics dataframe
2024-11-11 12:28:36,913:INFO:Finalizing model
2024-11-11 12:28:37,244:INFO:Uploading results into container
2024-11-11 12:28:37,244:INFO:Uploading model into container now
2024-11-11 12:28:37,262:INFO:_master_model_container: 11
2024-11-11 12:28:37,262:INFO:_display_container: 5
2024-11-11 12:28:37,262:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 12:28:37,285:INFO:create_model() successfully completed......................................
2024-11-11 12:28:37,415:INFO:SubProcess create_model() end ==================================
2024-11-11 12:28:37,416:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.3799
2024-11-11 12:28:37,428:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.39
2024-11-11 12:28:37,441:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-11-11 12:28:37,468:INFO:choose_better completed
2024-11-11 12:28:37,482:INFO:_master_model_container: 11
2024-11-11 12:28:37,492:INFO:_display_container: 4
2024-11-11 12:28:37,493:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-11 12:28:37,493:INFO:tune_model() successfully completed......................................
2024-11-11 12:31:27,605:INFO:Initializing plot_model()
2024-11-11 12:31:27,606:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:31:27,606:INFO:Checking exceptions
2024-11-11 12:31:29,032:INFO:Initializing plot_model()
2024-11-11 12:31:29,033:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:31:29,038:INFO:Checking exceptions
2024-11-11 12:31:29,159:INFO:Preloading libraries
2024-11-11 12:31:29,182:INFO:Copying training dataset
2024-11-11 12:31:29,182:INFO:Plot type: boundary
2024-11-11 12:31:29,313:INFO:Fitting StandardScaler()
2024-11-11 12:31:29,317:INFO:Fitting PCA()
2024-11-11 12:31:29,398:INFO:Fitting Model
2024-11-11 12:31:30,334:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/yellowbrick/contrib/classifier/boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2024-11-11 12:31:30,372:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/yellowbrick/contrib/classifier/boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2024-11-11 12:31:31,415:INFO:Visual Rendered Successfully
2024-11-11 12:31:31,581:INFO:plot_model() successfully completed......................................
2024-11-11 12:31:39,461:INFO:Initializing plot_model()
2024-11-11 12:31:39,461:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:31:39,501:INFO:Checking exceptions
2024-11-11 12:31:39,618:INFO:Preloading libraries
2024-11-11 12:31:39,643:INFO:Copying training dataset
2024-11-11 12:31:39,643:INFO:Plot type: pipeline
2024-11-11 12:31:39,702:INFO:Visual Rendered Successfully
2024-11-11 12:31:39,796:INFO:plot_model() successfully completed......................................
2024-11-11 12:31:42,288:INFO:Initializing plot_model()
2024-11-11 12:31:42,288:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:31:42,289:INFO:Checking exceptions
2024-11-11 12:31:42,384:INFO:Preloading libraries
2024-11-11 12:31:42,405:INFO:Copying training dataset
2024-11-11 12:31:42,406:INFO:Plot type: parameter
2024-11-11 12:31:42,410:INFO:Visual Rendered Successfully
2024-11-11 12:31:42,527:INFO:plot_model() successfully completed......................................
2024-11-11 12:31:45,710:INFO:Initializing plot_model()
2024-11-11 12:31:45,710:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:31:45,711:INFO:Checking exceptions
2024-11-11 12:31:45,831:INFO:Preloading libraries
2024-11-11 12:31:45,858:INFO:Copying training dataset
2024-11-11 12:31:45,859:INFO:Plot type: auc
2024-11-11 12:31:45,990:INFO:Fitting Model
2024-11-11 12:31:46,007:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:31:46,008:INFO:Scoring test/hold-out set
2024-11-11 12:31:46,360:INFO:Visual Rendered Successfully
2024-11-11 12:31:46,475:INFO:plot_model() successfully completed......................................
2024-11-11 12:31:55,749:INFO:Initializing plot_model()
2024-11-11 12:31:55,749:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:31:55,749:INFO:Checking exceptions
2024-11-11 12:31:55,847:INFO:Preloading libraries
2024-11-11 12:31:55,878:INFO:Copying training dataset
2024-11-11 12:31:55,878:INFO:Plot type: feature
2024-11-11 12:31:55,879:WARNING:No coef_ found. Trying feature_importances_
2024-11-11 12:32:10,642:INFO:Initializing plot_model()
2024-11-11 12:32:10,643:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:10,655:INFO:Checking exceptions
2024-11-11 12:32:10,786:INFO:Preloading libraries
2024-11-11 12:32:10,810:INFO:Copying training dataset
2024-11-11 12:32:10,810:INFO:Plot type: feature_all
2024-11-11 12:32:10,845:WARNING:No coef_ found. Trying feature_importances_
2024-11-11 12:32:14,370:INFO:Initializing plot_model()
2024-11-11 12:32:14,370:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:14,388:INFO:Checking exceptions
2024-11-11 12:32:14,429:INFO:Preloading libraries
2024-11-11 12:32:14,446:INFO:Copying training dataset
2024-11-11 12:32:14,446:INFO:Plot type: vc
2024-11-11 12:32:14,446:INFO:Determining param_name
2024-11-11 12:32:14,460:INFO:param_name: max_depth
2024-11-11 12:32:14,730:INFO:Fitting Model
2024-11-11 12:32:25,463:INFO:Visual Rendered Successfully
2024-11-11 12:32:25,613:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:25,683:INFO:Initializing plot_model()
2024-11-11 12:32:25,684:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:25,700:INFO:Checking exceptions
2024-11-11 12:32:25,801:INFO:Preloading libraries
2024-11-11 12:32:25,826:INFO:Copying training dataset
2024-11-11 12:32:25,826:INFO:Plot type: class_report
2024-11-11 12:32:25,968:INFO:Fitting Model
2024-11-11 12:32:25,968:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:32:25,983:INFO:Scoring test/hold-out set
2024-11-11 12:32:26,427:INFO:Visual Rendered Successfully
2024-11-11 12:32:26,574:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:37,397:INFO:Initializing plot_model()
2024-11-11 12:32:37,397:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:37,398:INFO:Checking exceptions
2024-11-11 12:32:37,539:INFO:Preloading libraries
2024-11-11 12:32:37,566:INFO:Copying training dataset
2024-11-11 12:32:37,566:INFO:Plot type: confusion_matrix
2024-11-11 12:32:37,700:INFO:Fitting Model
2024-11-11 12:32:37,700:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:32:37,700:INFO:Scoring test/hold-out set
2024-11-11 12:32:38,215:INFO:Visual Rendered Successfully
2024-11-11 12:32:38,365:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:44,146:INFO:Initializing plot_model()
2024-11-11 12:32:44,147:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:44,147:INFO:Checking exceptions
2024-11-11 12:32:44,246:INFO:Preloading libraries
2024-11-11 12:32:44,271:INFO:Copying training dataset
2024-11-11 12:32:44,271:INFO:Plot type: parameter
2024-11-11 12:32:44,275:INFO:Visual Rendered Successfully
2024-11-11 12:32:44,441:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:46,441:INFO:Initializing plot_model()
2024-11-11 12:32:46,441:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:46,441:INFO:Checking exceptions
2024-11-11 12:32:47,305:INFO:Initializing plot_model()
2024-11-11 12:32:47,305:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:47,305:INFO:Checking exceptions
2024-11-11 12:32:47,350:INFO:Preloading libraries
2024-11-11 12:32:47,370:INFO:Copying training dataset
2024-11-11 12:32:47,370:INFO:Plot type: boundary
2024-11-11 12:32:47,441:INFO:Fitting StandardScaler()
2024-11-11 12:32:47,446:INFO:Fitting PCA()
2024-11-11 12:32:47,535:INFO:Fitting Model
2024-11-11 12:32:48,429:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/yellowbrick/contrib/classifier/boundaries.py:435: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.
  self.ax.pcolormesh(

2024-11-11 12:32:48,459:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/yellowbrick/contrib/classifier/boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2024-11-11 12:32:49,374:INFO:Visual Rendered Successfully
2024-11-11 12:32:49,577:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:53,242:INFO:Initializing plot_model()
2024-11-11 12:32:53,242:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:53,242:INFO:Checking exceptions
2024-11-11 12:32:53,385:INFO:Preloading libraries
2024-11-11 12:32:53,406:INFO:Copying training dataset
2024-11-11 12:32:53,407:INFO:Plot type: pipeline
2024-11-11 12:32:53,481:INFO:Visual Rendered Successfully
2024-11-11 12:32:53,607:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:55,556:INFO:Initializing plot_model()
2024-11-11 12:32:55,556:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:55,572:INFO:Checking exceptions
2024-11-11 12:32:55,626:INFO:Preloading libraries
2024-11-11 12:32:55,655:INFO:Copying training dataset
2024-11-11 12:32:55,655:INFO:Plot type: parameter
2024-11-11 12:32:55,660:INFO:Visual Rendered Successfully
2024-11-11 12:32:55,822:INFO:plot_model() successfully completed......................................
2024-11-11 12:32:57,575:INFO:Initializing plot_model()
2024-11-11 12:32:57,575:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:32:57,576:INFO:Checking exceptions
2024-11-11 12:32:57,635:INFO:Preloading libraries
2024-11-11 12:32:57,658:INFO:Copying training dataset
2024-11-11 12:32:57,658:INFO:Plot type: auc
2024-11-11 12:32:57,788:INFO:Fitting Model
2024-11-11 12:32:57,789:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:32:57,805:INFO:Scoring test/hold-out set
2024-11-11 12:32:58,095:INFO:Visual Rendered Successfully
2024-11-11 12:32:58,249:INFO:plot_model() successfully completed......................................
2024-11-11 12:33:07,780:INFO:Initializing plot_model()
2024-11-11 12:33:07,781:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:33:07,828:INFO:Checking exceptions
2024-11-11 12:33:07,958:INFO:Preloading libraries
2024-11-11 12:33:07,978:INFO:Copying training dataset
2024-11-11 12:33:07,978:INFO:Plot type: parameter
2024-11-11 12:33:07,982:INFO:Visual Rendered Successfully
2024-11-11 12:33:08,170:INFO:plot_model() successfully completed......................................
2024-11-11 12:34:19,506:INFO:Initializing plot_model()
2024-11-11 12:34:19,507:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:19,507:INFO:Checking exceptions
2024-11-11 12:34:19,593:INFO:Preloading libraries
2024-11-11 12:34:19,614:INFO:Copying training dataset
2024-11-11 12:34:19,615:INFO:Plot type: learning
2024-11-11 12:34:19,748:INFO:Fitting Model
2024-11-11 12:34:29,059:INFO:Visual Rendered Successfully
2024-11-11 12:34:29,202:INFO:plot_model() successfully completed......................................
2024-11-11 12:34:29,326:INFO:Initializing plot_model()
2024-11-11 12:34:29,327:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:29,327:INFO:Checking exceptions
2024-11-11 12:34:30,532:INFO:Initializing plot_model()
2024-11-11 12:34:30,533:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:30,533:INFO:Checking exceptions
2024-11-11 12:34:30,606:INFO:Preloading libraries
2024-11-11 12:34:30,625:INFO:Copying training dataset
2024-11-11 12:34:30,625:INFO:Plot type: confusion_matrix
2024-11-11 12:34:30,759:INFO:Fitting Model
2024-11-11 12:34:30,759:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:34:30,774:INFO:Scoring test/hold-out set
2024-11-11 12:34:31,335:INFO:Visual Rendered Successfully
2024-11-11 12:34:31,495:INFO:plot_model() successfully completed......................................
2024-11-11 12:34:32,776:INFO:Initializing plot_model()
2024-11-11 12:34:32,776:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:32,777:INFO:Checking exceptions
2024-11-11 12:34:32,869:INFO:Preloading libraries
2024-11-11 12:34:32,889:INFO:Copying training dataset
2024-11-11 12:34:32,949:INFO:Plot type: gain
2024-11-11 12:34:32,950:INFO:Generating predictions / predict_proba on X_test
2024-11-11 12:34:34,074:INFO:Initializing plot_model()
2024-11-11 12:34:34,074:INFO:plot_model(plot=manifold, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:34,095:INFO:Checking exceptions
2024-11-11 12:34:35,016:INFO:Initializing plot_model()
2024-11-11 12:34:35,017:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:35,018:INFO:Checking exceptions
2024-11-11 12:34:35,110:INFO:Preloading libraries
2024-11-11 12:34:35,141:INFO:Copying training dataset
2024-11-11 12:34:35,141:INFO:Plot type: auc
2024-11-11 12:34:35,272:INFO:Fitting Model
2024-11-11 12:34:35,273:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:34:35,273:INFO:Scoring test/hold-out set
2024-11-11 12:34:35,867:INFO:Visual Rendered Successfully
2024-11-11 12:34:36,024:INFO:plot_model() successfully completed......................................
2024-11-11 12:34:37,007:INFO:Initializing plot_model()
2024-11-11 12:34:37,007:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:37,022:INFO:Checking exceptions
2024-11-11 12:34:37,114:INFO:Preloading libraries
2024-11-11 12:34:37,145:INFO:Copying training dataset
2024-11-11 12:34:37,145:INFO:Plot type: confusion_matrix
2024-11-11 12:34:37,277:INFO:Fitting Model
2024-11-11 12:34:37,277:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:34:37,280:INFO:Scoring test/hold-out set
2024-11-11 12:34:37,785:INFO:Visual Rendered Successfully
2024-11-11 12:34:37,939:INFO:plot_model() successfully completed......................................
2024-11-11 12:34:38,614:INFO:Initializing plot_model()
2024-11-11 12:34:38,614:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:38,615:INFO:Checking exceptions
2024-11-11 12:34:40,389:INFO:Initializing plot_model()
2024-11-11 12:34:40,389:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:34:40,389:INFO:Checking exceptions
2024-11-11 12:34:40,518:INFO:Preloading libraries
2024-11-11 12:34:40,545:INFO:Copying training dataset
2024-11-11 12:34:40,545:INFO:Plot type: tree
2024-11-11 12:34:43,717:INFO:Plotting decision trees
2024-11-11 12:34:43,757:INFO:Plotting tree 0
2024-11-11 12:34:44,215:INFO:Plotting tree 1
2024-11-11 12:34:44,346:INFO:Plotting tree 2
2024-11-11 12:34:44,459:INFO:Plotting tree 3
2024-11-11 12:34:44,541:INFO:Plotting tree 4
2024-11-11 12:34:44,674:INFO:Plotting tree 5
2024-11-11 12:34:44,792:INFO:Plotting tree 6
2024-11-11 12:34:44,881:INFO:Plotting tree 7
2024-11-11 12:34:44,999:INFO:Plotting tree 8
2024-11-11 12:34:45,140:INFO:Plotting tree 9
2024-11-11 12:34:45,250:INFO:Plotting tree 10
2024-11-11 12:34:45,352:INFO:Plotting tree 11
2024-11-11 12:34:45,465:INFO:Plotting tree 12
2024-11-11 12:34:45,575:INFO:Plotting tree 13
2024-11-11 12:34:45,681:INFO:Plotting tree 14
2024-11-11 12:34:45,840:INFO:Plotting tree 15
2024-11-11 12:34:45,931:INFO:Plotting tree 16
2024-11-11 12:34:46,059:INFO:Plotting tree 17
2024-11-11 12:34:46,182:INFO:Plotting tree 18
2024-11-11 12:34:46,296:INFO:Plotting tree 19
2024-11-11 12:34:46,438:INFO:Plotting tree 20
2024-11-11 12:34:46,543:INFO:Plotting tree 21
2024-11-11 12:34:46,618:INFO:Plotting tree 22
2024-11-11 12:34:46,749:INFO:Plotting tree 23
2024-11-11 12:34:46,897:INFO:Plotting tree 24
2024-11-11 12:34:47,031:INFO:Plotting tree 25
2024-11-11 12:34:47,156:INFO:Plotting tree 26
2024-11-11 12:34:47,275:INFO:Plotting tree 27
2024-11-11 12:34:47,384:INFO:Plotting tree 28
2024-11-11 12:34:47,518:INFO:Plotting tree 29
2024-11-11 12:34:47,663:INFO:Plotting tree 30
2024-11-11 12:34:47,781:INFO:Plotting tree 31
2024-11-11 12:34:47,930:INFO:Plotting tree 32
2024-11-11 12:34:48,056:INFO:Plotting tree 33
2024-11-11 12:34:48,182:INFO:Plotting tree 34
2024-11-11 12:34:48,324:INFO:Plotting tree 35
2024-11-11 12:34:48,422:INFO:Plotting tree 36
2024-11-11 12:34:48,518:INFO:Plotting tree 37
2024-11-11 12:34:48,609:INFO:Plotting tree 38
2024-11-11 12:34:48,728:INFO:Plotting tree 39
2024-11-11 12:34:48,853:INFO:Plotting tree 40
2024-11-11 12:34:48,957:INFO:Plotting tree 41
2024-11-11 12:34:49,065:INFO:Plotting tree 42
2024-11-11 12:34:49,168:INFO:Plotting tree 43
2024-11-11 12:34:49,276:INFO:Plotting tree 44
2024-11-11 12:34:49,378:INFO:Plotting tree 45
2024-11-11 12:34:49,501:INFO:Plotting tree 46
2024-11-11 12:34:49,582:INFO:Plotting tree 47
2024-11-11 12:34:49,663:INFO:Plotting tree 48
2024-11-11 12:34:50,190:INFO:Plotting tree 49
2024-11-11 12:34:50,299:INFO:Plotting tree 50
2024-11-11 12:34:50,407:INFO:Plotting tree 51
2024-11-11 12:34:50,525:INFO:Plotting tree 52
2024-11-11 12:34:50,653:INFO:Plotting tree 53
2024-11-11 12:34:50,806:INFO:Plotting tree 54
2024-11-11 12:34:50,905:INFO:Plotting tree 55
2024-11-11 12:34:50,996:INFO:Plotting tree 56
2024-11-11 12:34:51,088:INFO:Plotting tree 57
2024-11-11 12:34:51,210:INFO:Plotting tree 58
2024-11-11 12:34:51,306:INFO:Plotting tree 59
2024-11-11 12:34:51,395:INFO:Plotting tree 60
2024-11-11 12:34:51,517:INFO:Plotting tree 61
2024-11-11 12:34:51,635:INFO:Plotting tree 62
2024-11-11 12:34:51,744:INFO:Plotting tree 63
2024-11-11 12:34:51,826:INFO:Plotting tree 64
2024-11-11 12:34:51,961:INFO:Plotting tree 65
2024-11-11 12:34:52,065:INFO:Plotting tree 66
2024-11-11 12:34:52,177:INFO:Plotting tree 67
2024-11-11 12:34:52,274:INFO:Plotting tree 68
2024-11-11 12:34:52,399:INFO:Plotting tree 69
2024-11-11 12:34:52,496:INFO:Plotting tree 70
2024-11-11 12:34:52,619:INFO:Plotting tree 71
2024-11-11 12:34:52,742:INFO:Plotting tree 72
2024-11-11 12:34:52,867:INFO:Plotting tree 73
2024-11-11 12:34:52,972:INFO:Plotting tree 74
2024-11-11 12:34:53,056:INFO:Plotting tree 75
2024-11-11 12:34:53,175:INFO:Plotting tree 76
2024-11-11 12:34:53,295:INFO:Plotting tree 77
2024-11-11 12:34:53,422:INFO:Plotting tree 78
2024-11-11 12:34:53,533:INFO:Plotting tree 79
2024-11-11 12:34:53,660:INFO:Plotting tree 80
2024-11-11 12:34:53,773:INFO:Plotting tree 81
2024-11-11 12:34:53,918:INFO:Plotting tree 82
2024-11-11 12:34:54,040:INFO:Plotting tree 83
2024-11-11 12:34:54,172:INFO:Plotting tree 84
2024-11-11 12:34:54,282:INFO:Plotting tree 85
2024-11-11 12:34:54,395:INFO:Plotting tree 86
2024-11-11 12:34:54,486:INFO:Plotting tree 87
2024-11-11 12:34:54,628:INFO:Plotting tree 88
2024-11-11 12:34:54,740:INFO:Plotting tree 89
2024-11-11 12:34:54,845:INFO:Plotting tree 90
2024-11-11 12:34:54,971:INFO:Plotting tree 91
2024-11-11 12:34:55,097:INFO:Plotting tree 92
2024-11-11 12:34:55,239:INFO:Plotting tree 93
2024-11-11 12:34:55,358:INFO:Plotting tree 94
2024-11-11 12:34:55,462:INFO:Plotting tree 95
2024-11-11 12:34:55,574:INFO:Plotting tree 96
2024-11-11 12:34:55,694:INFO:Plotting tree 97
2024-11-11 12:34:55,785:INFO:Plotting tree 98
2024-11-11 12:34:55,935:INFO:Plotting tree 99
2024-11-11 12:34:56,046:INFO:Plotting tree 100
2024-11-11 12:34:56,163:INFO:Plotting tree 101
2024-11-11 12:34:56,274:INFO:Plotting tree 102
2024-11-11 12:34:56,379:INFO:Plotting tree 103
2024-11-11 12:34:56,477:INFO:Plotting tree 104
2024-11-11 12:34:56,609:INFO:Plotting tree 105
2024-11-11 12:34:56,734:INFO:Plotting tree 106
2024-11-11 12:34:56,860:INFO:Plotting tree 107
2024-11-11 12:34:56,988:INFO:Plotting tree 108
2024-11-11 12:34:57,109:INFO:Plotting tree 109
2024-11-11 12:34:57,245:INFO:Plotting tree 110
2024-11-11 12:34:57,342:INFO:Plotting tree 111
2024-11-11 12:34:57,455:INFO:Plotting tree 112
2024-11-11 12:34:57,568:INFO:Plotting tree 113
2024-11-11 12:34:57,674:INFO:Plotting tree 114
2024-11-11 12:34:57,773:INFO:Plotting tree 115
2024-11-11 12:34:57,886:INFO:Plotting tree 116
2024-11-11 12:34:58,013:INFO:Plotting tree 117
2024-11-11 12:34:58,118:INFO:Plotting tree 118
2024-11-11 12:34:58,209:INFO:Plotting tree 119
2024-11-11 12:34:58,319:INFO:Plotting tree 120
2024-11-11 12:34:58,437:INFO:Plotting tree 121
2024-11-11 12:34:58,572:INFO:Plotting tree 122
2024-11-11 12:34:58,655:INFO:Plotting tree 123
2024-11-11 12:34:58,738:INFO:Plotting tree 124
2024-11-11 12:34:58,857:INFO:Plotting tree 125
2024-11-11 12:34:58,963:INFO:Plotting tree 126
2024-11-11 12:34:59,061:INFO:Plotting tree 127
2024-11-11 12:34:59,203:INFO:Plotting tree 128
2024-11-11 12:34:59,315:INFO:Plotting tree 129
2024-11-11 12:34:59,441:INFO:Plotting tree 130
2024-11-11 12:34:59,559:INFO:Plotting tree 131
2024-11-11 12:34:59,671:INFO:Plotting tree 132
2024-11-11 12:34:59,788:INFO:Plotting tree 133
2024-11-11 12:34:59,897:INFO:Plotting tree 134
2024-11-11 12:35:00,023:INFO:Plotting tree 135
2024-11-11 12:35:00,141:INFO:Plotting tree 136
2024-11-11 12:35:00,231:INFO:Plotting tree 137
2024-11-11 12:35:00,371:INFO:Plotting tree 138
2024-11-11 12:35:00,489:INFO:Plotting tree 139
2024-11-11 12:35:00,601:INFO:Plotting tree 140
2024-11-11 12:35:00,699:INFO:Plotting tree 141
2024-11-11 12:35:00,819:INFO:Plotting tree 142
2024-11-11 12:35:00,969:INFO:Plotting tree 143
2024-11-11 12:35:01,084:INFO:Plotting tree 144
2024-11-11 12:35:01,175:INFO:Plotting tree 145
2024-11-11 12:35:01,302:INFO:Plotting tree 146
2024-11-11 12:35:01,428:INFO:Plotting tree 147
2024-11-11 12:35:01,950:INFO:Plotting tree 148
2024-11-11 12:35:02,035:INFO:Plotting tree 149
2024-11-11 12:35:02,128:INFO:Plotting tree 150
2024-11-11 12:35:02,246:INFO:Plotting tree 151
2024-11-11 12:35:02,366:INFO:Plotting tree 152
2024-11-11 12:35:02,498:INFO:Plotting tree 153
2024-11-11 12:35:02,604:INFO:Plotting tree 154
2024-11-11 12:35:02,701:INFO:Plotting tree 155
2024-11-11 12:35:02,811:INFO:Plotting tree 156
2024-11-11 12:35:02,926:INFO:Plotting tree 157
2024-11-11 12:35:03,066:INFO:Plotting tree 158
2024-11-11 12:35:03,177:INFO:Plotting tree 159
2024-11-11 12:35:03,283:INFO:Plotting tree 160
2024-11-11 12:35:03,408:INFO:Plotting tree 161
2024-11-11 12:35:03,513:INFO:Plotting tree 162
2024-11-11 12:35:03,621:INFO:Plotting tree 163
2024-11-11 12:35:03,739:INFO:Plotting tree 164
2024-11-11 12:35:03,844:INFO:Plotting tree 165
2024-11-11 12:35:03,922:INFO:Plotting tree 166
2024-11-11 12:35:04,032:INFO:Plotting tree 167
2024-11-11 12:35:04,151:INFO:Plotting tree 168
2024-11-11 12:35:04,258:INFO:Plotting tree 169
2024-11-11 12:35:04,370:INFO:Plotting tree 170
2024-11-11 12:35:04,495:INFO:Plotting tree 171
2024-11-11 12:35:04,601:INFO:Plotting tree 172
2024-11-11 12:35:04,720:INFO:Plotting tree 173
2024-11-11 12:35:04,810:INFO:Plotting tree 174
2024-11-11 12:35:04,966:INFO:Plotting tree 175
2024-11-11 12:35:05,071:INFO:Plotting tree 176
2024-11-11 12:35:05,169:INFO:Plotting tree 177
2024-11-11 12:35:05,282:INFO:Plotting tree 178
2024-11-11 12:35:05,358:INFO:Plotting tree 179
2024-11-11 12:35:05,467:INFO:Plotting tree 180
2024-11-11 12:35:05,559:INFO:Plotting tree 181
2024-11-11 12:35:05,661:INFO:Plotting tree 182
2024-11-11 12:35:05,754:INFO:Plotting tree 183
2024-11-11 12:35:05,887:INFO:Plotting tree 184
2024-11-11 12:35:06,029:INFO:Plotting tree 185
2024-11-11 12:35:06,149:INFO:Plotting tree 186
2024-11-11 12:35:06,262:INFO:Plotting tree 187
2024-11-11 12:35:06,382:INFO:Plotting tree 188
2024-11-11 12:35:06,495:INFO:Plotting tree 189
2024-11-11 12:35:06,614:INFO:Plotting tree 190
2024-11-11 12:35:06,732:INFO:Plotting tree 191
2024-11-11 12:35:06,824:INFO:Plotting tree 192
2024-11-11 12:35:06,916:INFO:Plotting tree 193
2024-11-11 12:35:07,008:INFO:Plotting tree 194
2024-11-11 12:35:07,133:INFO:Plotting tree 195
2024-11-11 12:35:07,206:INFO:Plotting tree 196
2024-11-11 12:35:07,295:INFO:Plotting tree 197
2024-11-11 12:35:07,409:INFO:Plotting tree 198
2024-11-11 12:35:07,556:INFO:Plotting tree 199
2024-11-11 12:35:07,685:INFO:Plotting tree 200
2024-11-11 12:35:07,791:INFO:Plotting tree 201
2024-11-11 12:35:07,891:INFO:Plotting tree 202
2024-11-11 12:35:08,043:INFO:Plotting tree 203
2024-11-11 12:35:08,144:INFO:Plotting tree 204
2024-11-11 12:35:08,280:INFO:Plotting tree 205
2024-11-11 12:35:08,367:INFO:Plotting tree 206
2024-11-11 12:35:08,480:INFO:Plotting tree 207
2024-11-11 12:35:08,587:INFO:Plotting tree 208
2024-11-11 12:35:08,723:INFO:Plotting tree 209
2024-11-11 12:35:08,824:INFO:Plotting tree 210
2024-11-11 12:35:08,936:INFO:Plotting tree 211
2024-11-11 12:35:09,073:INFO:Plotting tree 212
2024-11-11 12:35:09,169:INFO:Plotting tree 213
2024-11-11 12:35:09,291:INFO:Plotting tree 214
2024-11-11 12:35:09,419:INFO:Plotting tree 215
2024-11-11 12:35:09,544:INFO:Plotting tree 216
2024-11-11 12:35:09,671:INFO:Plotting tree 217
2024-11-11 12:35:09,786:INFO:Plotting tree 218
2024-11-11 12:35:09,913:INFO:Plotting tree 219
2024-11-11 12:35:10,026:INFO:Plotting tree 220
2024-11-11 12:35:10,157:INFO:Plotting tree 221
2024-11-11 12:35:10,262:INFO:Plotting tree 222
2024-11-11 12:35:10,361:INFO:Plotting tree 223
2024-11-11 12:35:10,481:INFO:Plotting tree 224
2024-11-11 12:35:10,602:INFO:Plotting tree 225
2024-11-11 12:35:10,721:INFO:Plotting tree 226
2024-11-11 12:35:10,850:INFO:Plotting tree 227
2024-11-11 12:35:10,956:INFO:Plotting tree 228
2024-11-11 12:35:11,046:INFO:Plotting tree 229
2024-11-11 12:39:31,580:INFO:Visual Rendered Successfully
2024-11-11 12:39:32,224:INFO:plot_model() successfully completed......................................
2024-11-11 12:39:32,249:INFO:Initializing evaluate_model()
2024-11-11 12:39:32,249:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-11 12:39:32,269:INFO:Initializing plot_model()
2024-11-11 12:39:32,305:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:39:32,305:INFO:Checking exceptions
2024-11-11 12:39:32,347:INFO:Preloading libraries
2024-11-11 12:39:32,372:INFO:Copying training dataset
2024-11-11 12:39:32,373:INFO:Plot type: pipeline
2024-11-11 12:39:32,456:INFO:Visual Rendered Successfully
2024-11-11 12:39:32,594:INFO:plot_model() successfully completed......................................
2024-11-11 12:39:39,682:INFO:Initializing plot_model()
2024-11-11 12:39:39,683:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:39:39,685:INFO:Checking exceptions
2024-11-11 12:39:39,766:INFO:Preloading libraries
2024-11-11 12:39:39,795:INFO:Copying training dataset
2024-11-11 12:39:39,795:INFO:Plot type: pipeline
2024-11-11 12:39:39,870:INFO:Visual Rendered Successfully
2024-11-11 12:39:40,003:INFO:plot_model() successfully completed......................................
2024-11-11 12:41:48,685:INFO:Initializing plot_model()
2024-11-11 12:41:48,686:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:41:48,689:INFO:Checking exceptions
2024-11-11 12:41:48,818:INFO:Preloading libraries
2024-11-11 12:41:48,842:INFO:Copying training dataset
2024-11-11 12:41:48,842:INFO:Plot type: error
2024-11-11 12:41:48,974:INFO:Fitting Model
2024-11-11 12:41:48,974:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:41:48,979:INFO:Scoring test/hold-out set
2024-11-11 12:41:49,412:INFO:Visual Rendered Successfully
2024-11-11 12:41:49,566:INFO:plot_model() successfully completed......................................
2024-11-11 12:42:19,948:INFO:Initializing plot_model()
2024-11-11 12:42:19,949:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:42:19,952:INFO:Checking exceptions
2024-11-11 12:42:30,150:INFO:Initializing plot_model()
2024-11-11 12:42:30,150:INFO:plot_model(plot=ks, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:42:30,164:INFO:Checking exceptions
2024-11-11 12:42:30,272:INFO:Preloading libraries
2024-11-11 12:42:30,303:INFO:Copying training dataset
2024-11-11 12:42:30,303:INFO:Plot type: ks
2024-11-11 12:42:30,304:INFO:Generating predictions / predict_proba on X_test
2024-11-11 12:42:34,042:INFO:Initializing plot_model()
2024-11-11 12:42:34,042:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 12:42:34,043:INFO:Checking exceptions
2024-11-11 12:42:34,094:INFO:Preloading libraries
2024-11-11 12:42:34,116:INFO:Copying training dataset
2024-11-11 12:42:34,117:INFO:Plot type: error
2024-11-11 12:42:34,259:INFO:Fitting Model
2024-11-11 12:42:34,259:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 12:42:34,324:INFO:Scoring test/hold-out set
2024-11-11 12:42:35,143:INFO:Visual Rendered Successfully
2024-11-11 12:42:35,299:INFO:plot_model() successfully completed......................................
2024-11-11 13:47:30,370:INFO:Initializing plot_model()
2024-11-11 13:47:30,371:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 13:47:30,371:INFO:Checking exceptions
2024-11-11 13:47:30,487:INFO:Preloading libraries
2024-11-11 13:47:30,505:INFO:Copying training dataset
2024-11-11 13:47:30,505:INFO:Plot type: confusion_matrix
2024-11-11 13:47:30,635:INFO:Fitting Model
2024-11-11 13:47:30,635:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 13:47:30,652:INFO:Scoring test/hold-out set
2024-11-11 13:47:31,206:INFO:Visual Rendered Successfully
2024-11-11 13:47:31,376:INFO:plot_model() successfully completed......................................
2024-11-11 13:47:51,477:INFO:Initializing plot_model()
2024-11-11 13:47:51,477:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 13:47:51,478:INFO:Checking exceptions
2024-11-11 13:47:51,541:INFO:Preloading libraries
2024-11-11 13:47:51,564:INFO:Copying training dataset
2024-11-11 13:47:51,564:INFO:Plot type: pipeline
2024-11-11 13:47:51,668:INFO:Visual Rendered Successfully
2024-11-11 13:47:51,814:INFO:plot_model() successfully completed......................................
2024-11-11 13:48:12,708:INFO:Initializing plot_model()
2024-11-11 13:48:12,708:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 13:48:12,709:INFO:Checking exceptions
2024-11-11 13:48:12,836:INFO:Preloading libraries
2024-11-11 13:48:12,855:INFO:Copying training dataset
2024-11-11 13:48:12,855:INFO:Plot type: confusion_matrix
2024-11-11 13:48:12,986:INFO:Fitting Model
2024-11-11 13:48:12,987:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 13:48:12,989:INFO:Scoring test/hold-out set
2024-11-11 13:48:13,455:INFO:Visual Rendered Successfully
2024-11-11 13:48:13,619:INFO:plot_model() successfully completed......................................
2024-11-11 13:58:36,644:INFO:Initializing plot_model()
2024-11-11 13:58:36,645:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 13:58:36,645:INFO:Checking exceptions
2024-11-11 13:58:36,688:INFO:Preloading libraries
2024-11-11 13:58:36,710:INFO:Copying training dataset
2024-11-11 13:58:36,710:INFO:Plot type: pipeline
2024-11-11 13:58:36,776:INFO:Visual Rendered Successfully
2024-11-11 13:58:36,930:INFO:plot_model() successfully completed......................................
2024-11-11 13:59:34,727:INFO:Initializing plot_model()
2024-11-11 13:59:34,727:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 13:59:34,728:INFO:Checking exceptions
2024-11-11 13:59:34,809:INFO:Preloading libraries
2024-11-11 13:59:34,828:INFO:Copying training dataset
2024-11-11 13:59:34,828:INFO:Plot type: confusion_matrix
2024-11-11 13:59:34,964:INFO:Fitting Model
2024-11-11 13:59:34,964:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 13:59:34,979:INFO:Scoring test/hold-out set
2024-11-11 13:59:35,460:INFO:Visual Rendered Successfully
2024-11-11 13:59:35,631:INFO:plot_model() successfully completed......................................
2024-11-11 14:11:18,437:INFO:Initializing plot_model()
2024-11-11 14:11:18,438:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 14:11:18,438:INFO:Checking exceptions
2024-11-11 14:11:20,859:INFO:Initializing plot_model()
2024-11-11 14:11:20,859:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 14:11:20,862:INFO:Checking exceptions
2024-11-11 14:11:20,981:INFO:Preloading libraries
2024-11-11 14:11:21,010:INFO:Copying training dataset
2024-11-11 14:11:21,010:INFO:Plot type: learning
2024-11-11 14:11:21,134:INFO:Fitting Model
2024-11-11 14:11:32,944:INFO:Visual Rendered Successfully
2024-11-11 14:11:33,125:INFO:plot_model() successfully completed......................................
2024-11-11 14:12:20,752:INFO:Initializing plot_model()
2024-11-11 14:12:20,752:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=7, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.05, min_samples_leaf=4,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a5bc99f40>, system=True)
2024-11-11 14:12:20,752:INFO:Checking exceptions
2024-11-11 14:12:20,795:INFO:Preloading libraries
2024-11-11 14:12:20,813:INFO:Copying training dataset
2024-11-11 14:12:20,813:INFO:Plot type: confusion_matrix
2024-11-11 14:12:20,964:INFO:Fitting Model
2024-11-11 14:12:20,965:WARNING:/home/disk/meso-home/vgarcia1/anaconda3/envs/impacts/lib/python3.9/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-11-11 14:12:20,967:INFO:Scoring test/hold-out set
2024-11-11 14:12:21,430:INFO:Visual Rendered Successfully
2024-11-11 14:12:21,598:INFO:plot_model() successfully completed......................................
